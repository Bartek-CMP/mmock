// Code generated by go-bindata.
// sources:
// tmpl/css/style.css
// tmpl/index.html
// tmpl/js/mapping.js
// tmpl/js/request_logger.js
// tmpl/js/sorting.js
// tmpl/js/util.js
// tmpl/swagger.json
// DO NOT EDIT!

package console

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _tmplCssStyleCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\xdd\x8a\xdb\x30\x10\x85\xaf\xab\xa7\x18\xd8\xdb\xda\x34\xdb\x2c\xdd\x2a\x50\xd8\xfe\xec\x6b\x2c\x23\x69\xec\x08\x2b\x1a\x33\x52\xea\x4d\x43\xde\xbd\xc8\x56\x9a\x16\xea\xbd\x32\x3e\xdf\x9c\x23\x74\x46\x5a\x37\x13\x99\xc1\xe7\x26\x59\xe1\x10\x0c\x0a\x9c\x15\x00\xc0\xe4\x5d\xde\x6b\xd8\xdc\x8f\xaf\x3b\x75\x51\xff\x19\x6c\xb2\xa0\x1d\xea\xb8\x41\x3b\xf4\xc2\xc7\xe8\x1a\xcb\x81\x45\xc3\xdd\xb7\xa7\x1f\xdb\xe7\xa7\xdd\x82\x59\x1c\x49\x13\xa8\xcb\x1a\x36\xe3\x2b\x24\x0e\xde\xc1\x9d\xb5\x76\x35\x7d\x7f\x3c\x98\xf5\xf4\xed\xfd\xa3\xb1\xf8\xa6\x59\xef\xf9\x27\xc9\x7a\xc4\xe6\xfb\xa7\xed\xd7\xe7\x12\xa1\xda\x44\x81\x6c\x26\xf7\x22\x3c\xc1\x19\x3a\x8e\xb9\x99\xc8\xf7\xfb\xac\xc1\x70\x70\xbb\x8b\x6a\x53\x16\x1f\x7b\x38\x43\x0d\xe8\x85\x28\xee\xe0\xa2\xda\x78\x3c\x98\x72\xd2\x95\x38\x94\x81\x05\x63\x4f\x33\x36\xcc\x81\x30\xde\xb8\x09\x47\xaa\xc6\x10\x6e\xf2\x01\x7b\x8a\x19\x67\x32\xd0\xe9\x06\x84\x5c\x11\x55\x46\x13\x08\x5a\xcb\x21\xe0\x98\xa8\xf5\x11\xce\xea\x9d\xf3\x69\x0c\x78\xd2\x33\x6d\x84\xa7\xe5\x4a\xcb\xef\xd2\xc1\x17\xc8\x86\xdd\xa9\x7c\xa5\xde\xb5\x0c\xea\x3f\xd4\xbd\x57\x7f\xe9\xb3\xb2\x5e\x5c\xd7\x75\xb5\x35\x96\xec\x63\xff\xe2\x2d\xc7\x54\xe7\x47\x74\xce\xc7\xbe\xee\xfa\xa1\x3c\x9f\x22\x5f\xbd\x88\xb8\x08\x73\xc5\xc9\xff\x22\xfd\xa1\x7d\xa4\xc3\xbf\x6b\xa8\x59\x57\x93\xfb\xfc\xf0\x71\x5b\xce\xfc\x1d\x00\x00\xff\xff\x65\xd5\x4f\x11\xb0\x02\x00\x00")

func tmplCssStyleCssBytes() ([]byte, error) {
	return bindataRead(
		_tmplCssStyleCss,
		"tmpl/css/style.css",
	)
}

func tmplCssStyleCss() (*asset, error) {
	bytes, err := tmplCssStyleCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/css/style.css", size: 688, mode: os.FileMode(420), modTime: time.Unix(1506711188, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x3a\xeb\x72\xe3\xb6\xd5\xff\xfd\x14\x58\x26\xf9\x56\x9e\x5d\x92\x96\xbd\x5e\x3b\x36\xc5\x19\xc7\x56\xbe\x5d\x8f\xb5\xeb\xac\x1d\xbb\x49\xa7\xb3\x03\x12\x47\x22\x64\x10\xa0\x01\x50\x97\x78\x3c\xd3\x27\xe8\x7b\xf4\x47\x5f\xa2\x7d\x93\x3e\x49\x07\x24\x45\x51\xd4\xd5\xde\x49\x9a\x46\x3f\x24\x12\x3c\x57\x9c\x2b\x0e\xe5\xbd\x38\xfb\x78\x7a\xfd\xd3\x65\x1b\xbd\xbb\xee\x5c\xf8\x5b\x5e\xa4\x63\xe6\x6f\x6d\x79\x11\x60\xe2\x6f\x21\x84\x90\x17\x83\xc6\x28\xd2\x3a\xb1\xe1\x3e\xa5\x83\x96\x75\x2a\xb8\x06\xae\xed\xeb\x71\x02\x16\x0a\xf3\xbb\x96\xa5\x61\xa4\x5d\x83\x7f\x8c\xc2\x08\x4b\x05\xba\xf5\xe3\xf5\xf7\xf6\xa1\x85\xdc\x82\x92\xa6\x9a\x81\xdf\xe9\x88\xf0\x0e\x9d\x0a\xae\x04\x03\xcf\xcd\x17\x73\x00\x15\x4a\x9a\x68\xa4\x64\xd8\xb2\x0c\x47\x75\xe4\xba\xa1\x20\xe0\xf4\xef\x53\x90\x63\x27\x14\xb1\x9b\x5f\xda\xbb\x4e\xd3\x79\xe3\xc4\x94\x3b\x7d\x65\xf9\x9e\x9b\xa3\xae\xa2\x43\x78\x5f\x39\x21\x13\x29\xe9\x32\x2c\x21\x23\x86\xfb\x78\xe4\x32\x1a\x28\x37\xc2\x9c\x30\x08\xb0\x54\x4e\x5f\xb9\xbb\xce\x8e\xb3\x33\xbb\x56\x65\x92\x73\x61\x94\xdf\x21\x09\xac\x65\x29\x3d\x66\xa0\x22\x00\x6d\xa1\x48\x42\x77\xca\x35\xc6\xa3\x90\x70\x27\x10\x42\x2b\x2d\x71\x62\x6e\x0c\xe3\x72\xc1\xdd\x73\xf6\x9c\xb7\x6e\xa8\xd4\x74\x2d\x53\x2b\x54\xca\x42\x94\x6b\xe8\x49\xaa\xc7\x2d\x4b\x45\x78\xef\xf0\x8d\xdd\xbc\x3f\x8c\xaf\xcf\x3f\x9e\x5c\x8d\x0e\xfb\xcd\x93\xf4\x15\xde\xbf\x3d\xbb\xe1\x97\x74\x97\xdd\x7d\xdf\x1d\x0e\xdb\x27\xf8\x30\x3a\x3b\x23\xfd\x9f\x59\x72\x01\xbd\x51\xd4\xbf\xe9\xb4\x9b\xdd\x5e\xff\xf6\xf2\xff\xe3\xbb\x5f\xd4\x81\x85\x42\x29\x94\x12\x92\xf6\x28\x6f\x59\x98\x0b\x3e\x8e\x45\xaa\x2c\xff\x57\x56\xca\xd6\x11\xc4\xb0\x4a\xb5\xee\xc5\xed\xee\x87\x9d\x26\xeb\xdc\xf7\xf1\xdd\x77\x77\xa3\x3d\xe6\x76\xbe\x6d\xe3\x28\x1d\x26\x57\x5d\xf8\x30\xb8\x79\xbb\x77\xbe\x0f\xbf\xf0\xbd\xf4\xe7\x5f\x70\x72\xbd\x93\x1e\xb4\x7f\x52\x7f\xea\xf4\x7f\xb8\x79\xb5\xd3\xe6\xfb\x72\x9d\x6a\x8b\xbc\x62\x53\x55\xfa\x75\xf3\xf4\x17\xaa\xb0\x13\x5f\x05\xe7\x67\xed\x77\x14\xb3\x6e\x9c\x7e\xf7\xdd\x0f\x97\x6f\x4f\xde\xfc\x20\x13\x79\xbf\xff\xf1\xa6\x7b\xbb\x77\x70\xf9\xe9\xd3\x5e\x7f\xbf\x7d\x71\x3f\x52\xaa\x39\xbe\xb9\xff\xa8\x39\x24\xfc\xdd\xcd\xe5\xb7\xf8\xfc\x60\x74\xb5\x5c\x85\x85\xce\x37\x6b\x96\x35\x1e\x5e\xca\xbf\x67\x13\x8a\x99\xe8\xb9\x4d\x67\xef\x8d\xf3\x6d\xcd\x4c\xf9\xb3\xa9\x9d\xe6\x7c\x41\x8f\x13\x28\xa2\xdd\x00\x3c\x3f\xe4\x96\x0a\xd4\x5f\x22\xcf\xa2\x20\x2c\xf8\x56\x84\x3a\xc7\x03\x7c\x95\xad\x5a\xb9\x38\x7d\xe5\xa6\x9a\xb2\x15\x89\x62\x0d\xb6\x84\xfb\x14\x94\xfe\xcc\x44\xaf\x07\xf2\xf9\x74\x62\x9c\x24\x94\xf7\x9e\x4f\x40\x09\xa9\x97\x10\x58\x1c\xb7\x35\x5b\x15\x0e\x63\x0c\x9e\x41\x39\x15\x03\x66\x69\x9e\xe3\x18\x5a\xd6\x80\xc2\x30\x11\x52\x57\x92\xfb\x90\x12\x1d\xb5\x08\x0c\x68\x08\x76\x76\xf3\x1a\x51\x4e\x35\xc5\xcc\x56\x21\x66\xd0\x6a\x5a\x9b\xa8\x92\xc3\x98\xcf\xd7\x0d\x44\x44\x98\xc6\xc0\x35\xda\x76\x24\x60\x32\x6e\x74\x53\x1e\x6a\x2a\x78\x63\x1b\x3d\xa0\x12\xd2\x7c\x66\x6e\x06\x58\xa2\xc2\x26\x17\x99\x49\x50\x0b\x71\x18\xa2\x4f\xd5\xb5\xc6\xf6\xf1\x3c\xd6\x50\x15\xa0\xb7\x10\x5c\x89\xf0\x0e\x74\xc3\x1a\x1a\x57\xb5\xd0\x2b\xc4\x44\x88\x0d\x77\x27\x12\x4a\xa3\x57\xc8\x72\x21\x8c\x84\xb5\x7d\x3c\x43\x66\xa8\x1c\xc1\x63\x50\x0a\xf7\x00\xb5\x50\x29\x32\x0c\x80\xeb\x39\xb9\x27\x8c\xa7\x08\xe7\x57\x1f\x3f\x38\x89\xa9\x8f\x39\x8a\x43\xb0\xc6\x35\x1e\xe6\x33\xa3\xa0\xc3\x44\xaf\xcd\xb5\x1c\x37\x0a\x42\x35\x84\xc7\xe3\xad\xad\x39\x65\x0b\x77\x2b\x34\xee\xe4\x77\x8d\x19\x2d\x6b\x64\x26\x0e\xda\xa5\x8c\x5d\x50\xa5\x1b\xdb\xc7\xb3\x64\x5d\xb7\x20\x83\x34\x0e\x18\xa0\xc2\x21\x67\x60\x18\xe8\x09\xa1\x6b\x03\xf4\x9e\xa0\x16\xb2\xbe\x2a\x96\xec\x0c\xd1\x3a\x9e\x43\x31\x1d\x07\xc8\x36\x03\xe3\x11\xc6\x4c\x7f\xfe\x4b\x8d\xf9\xd7\x8d\x59\xb2\xdb\x4e\x97\x72\xd2\x78\xa9\xa3\x97\xdb\x8e\x16\x27\x52\xe2\x71\x63\xdb\xe9\x0a\xd9\xc6\x61\x34\x75\x26\xc8\x69\x6e\xa3\x87\xb9\x4d\x36\x8c\xa9\x91\xaf\x80\x71\x28\x99\xb7\x04\xed\xa2\x06\x25\xe8\x45\xab\x85\x5e\xbe\xdc\x46\x0f\xb3\x92\x3a\x49\xaa\xa2\xc6\xcb\xaf\x5e\xa2\x57\x88\x92\xed\xc7\x59\xbb\xd4\x37\xd0\x30\x2c\x36\xad\xb0\xcb\x55\x7e\x57\xd3\xed\x75\x6d\x3f\x6a\x86\x9a\x24\x02\x13\x82\x8d\xca\xb3\x92\xdf\x34\x3b\x78\x6e\xde\xcb\x6d\x79\x81\x20\xe3\x22\x46\x23\x59\x5c\x10\x3a\x40\x21\xc3\x4a\xb5\x2c\x13\xeb\x98\x72\x90\x76\x97\xa5\x94\x54\x42\xd5\x8b\x9a\xf5\xae\x2d\x6a\x56\x1e\x57\x88\x48\x31\xac\x20\x66\x4f\xb1\xa2\x04\xa6\x4c\x98\x1d\x13\x7b\x17\x25\x98\xd8\x92\xf6\x22\x6d\xef\xd4\x10\x32\xa4\x94\x4d\x30\x38\x1e\x20\x8e\x07\x76\x42\x19\x53\xd9\x95\xd2\x38\xbc\x03\xb2\x00\x0d\xe5\x99\x70\x82\x8a\x43\x4d\x07\x60\xf9\x1e\x46\x26\xc8\x6c\x2d\x7a\x3d\x66\x92\x12\x0e\x26\xa9\xf0\xab\x22\xcc\x2c\xbf\x48\x1e\xca\x73\xf1\x12\xc2\x2e\xa3\x4b\x59\xae\xe4\x51\x98\xd6\xf2\x8b\xe0\x79\x3e\x8b\x9c\x60\x1f\x0f\x70\x6e\xde\xa3\x63\x6b\x96\x6d\x2c\x08\x66\x93\x35\x2c\x7b\xa0\x0d\xff\x71\x27\x5b\xf6\x4f\x02\x91\xea\x27\x72\xf7\xdc\x94\xd5\x2c\xea\x66\x26\xad\x2d\xce\x78\x52\x66\xe4\xa6\xb1\xec\x3c\xbd\x0a\xa0\xc6\x81\x5d\x94\x98\x65\xd6\x7c\x61\xdb\xd7\x38\x40\x4d\xdb\x5e\x02\x60\xc8\x51\xd2\xb2\x26\x86\xac\xd2\x4e\x30\x07\xd4\xc5\x04\x10\xe5\x68\xe2\x0d\x0b\xc9\x4c\x78\x51\x1e\x88\x11\xd2\x42\xb0\x00\xcb\x65\x3c\xeb\x6a\xcc\x3b\xfd\x2a\x68\xb3\x3b\x23\x65\x37\x77\xd7\xe0\xd4\xf1\x92\x94\xb1\x3c\x64\x36\x40\xcc\x90\xf1\x04\x35\xd0\x1c\x05\x9a\xdb\x04\xba\x38\x65\x3a\xbb\x1e\x29\x0b\x65\x67\xaf\x96\xf5\x09\xba\x12\x54\x64\x65\xfb\x18\x68\x7e\xca\x00\xcb\x0b\xd1\xdb\x80\x4f\x06\xba\x5a\xf5\x65\xee\x36\x0b\x44\xe8\x60\xcd\x16\x6e\x00\xf2\xc2\xb6\x5d\xb3\xbd\x2b\xec\x86\x96\x59\x03\xa9\x04\x87\x20\xf7\x4d\x67\xb5\x92\xd3\xba\xc7\x46\x08\x29\x86\x2b\x9d\xc7\xc0\x3c\xcb\xd5\x8c\x47\x33\x94\x7d\x97\xd6\x9c\x76\x0a\x56\x35\x12\x2e\x44\xef\xd2\xc0\xad\x73\xcd\x17\xb6\x3d\xe9\x4e\x18\x55\x7a\xa3\xcd\xab\xb0\xb1\x4d\xae\xa9\x46\x1d\x03\x5b\x82\x4a\x04\x57\xab\xc3\xad\x24\x98\xb7\x12\x55\x92\x79\x8f\x30\x43\x33\x6f\x38\xec\x48\x0c\xc0\x34\x7f\x99\xc3\xda\x65\xc9\x42\x59\x70\x10\x31\xe4\x16\xca\x3a\xdb\x89\x24\x0c\x8f\x45\xaa\x8f\x50\x97\x8e\xa0\x28\xed\x43\x21\x89\x3d\x94\x38\x39\x42\x81\x04\x7c\x67\x9b\x85\xe3\x4d\x63\x4a\x9b\x6a\x3a\x91\x2c\xa2\x84\x40\x16\x4a\x9b\x61\xe7\x14\xe4\xe6\xc0\x05\xcb\xaa\xb3\xaa\xd8\xde\xb3\x7c\x4f\x69\x29\x78\xcf\x3f\xc3\x1a\x3c\xb7\xb8\x79\x1a\x59\x57\x47\x5f\x2a\x48\x73\x2a\xc8\xa9\x20\xbf\x0f\x41\x3a\xa0\x23\x41\xfe\x7b\xa2\x1c\x4c\x45\xb9\xc4\x3a\xfa\x2d\x04\xf1\xdc\x4d\x7d\xca\xd0\x2d\x27\x7b\x6b\x81\xf5\xb4\x63\xdc\x80\xf0\x66\xc0\x9e\x9b\x05\xe6\x17\xe5\xfa\x4d\x32\x70\x9e\x5d\xf3\x44\xb9\x61\x6e\x1d\x02\x63\xc8\x7c\xd9\x0a\x99\x73\xeb\xa4\xd8\x7a\x10\xfb\x17\x58\x95\x89\x16\xa5\x09\xc1\x1a\xc8\x11\xf2\x54\x82\x79\x96\xb9\x18\x56\xfa\x73\xb1\x6e\xf9\xb7\x98\x66\xed\xb9\xe3\x78\xae\x01\xf1\x3d\x17\xe2\x67\xe9\xb3\xea\xd1\x0b\xdb\x46\xa6\x37\xda\x5d\xdb\x1b\x4d\x1a\xd0\x85\xbd\xd1\x9a\x8e\x68\x6d\x2d\xab\x31\xf9\xa2\x7a\x50\xa9\x05\xb3\xe7\xc5\x45\xb5\x40\x69\x49\x13\x20\xd5\xca\xb0\x51\xb9\x79\x4a\x04\x3c\x21\x57\x9b\x54\x90\x8f\x49\xac\xe6\xfe\x37\x79\x29\x4e\x25\xb5\xfc\x1f\x25\xcd\x1d\xa5\xd0\xa1\x38\xbc\x7d\xa6\xa1\xe0\xca\x64\x8b\xca\xb3\x1e\x1b\x27\x91\x79\x80\xca\x2b\x3b\x8c\x60\x20\x05\xcf\xcb\x9b\x3f\xf1\xa8\x4d\xb1\xd2\x64\x8a\x53\xfb\x79\x52\x8e\x99\x6a\xb7\xfb\xb6\xd0\x8e\x80\x0a\x2d\xff\x0c\xf2\xb3\x08\x15\xfc\x77\xa6\xe6\x33\xf5\x6b\xee\x14\xfa\xc5\x59\x29\xb1\x26\x25\xe5\x0f\xa1\x5c\x69\xbc\x04\xeb\xc8\xca\x4b\xd4\x1f\x42\xb1\xc3\x6f\x2c\x54\x34\x91\x2a\x65\xd9\x81\xde\xfc\xfe\x6f\x2b\xf7\xab\x62\x6c\xd6\x36\x94\x2d\xc3\x06\x99\x75\xb3\x16\x60\x13\x96\xeb\x29\xad\x6d\x24\x9e\x51\x55\x17\xac\xd7\x96\x2a\xb7\xc5\x65\x7e\x6d\x6a\x71\x36\x64\x41\xd9\x8c\x65\x52\x30\xab\xed\x45\x36\x9a\xc9\x2b\x6e\x9e\x5d\x8a\xa9\x0c\x92\xc2\x9c\x57\xf2\xf7\x1c\xd6\xe2\xb1\x5a\x86\x5b\xbc\x0a\x41\xf9\x8d\x8a\xeb\x83\xb6\x39\xf8\xe5\xa3\x95\x79\xd8\x7c\xdc\xb8\x6c\x0a\x13\xa4\x5a\x0b\x5e\xcc\xf4\xf3\x9b\xb2\x24\x87\x4c\x28\x28\x46\x4e\x84\xaa\x98\x96\x44\x2d\xff\xff\x34\x8d\x41\x1d\x7b\x6e\x8e\xb3\x84\x7a\xf4\x66\x56\x96\x6c\x2c\x61\x15\x23\xc7\x5b\x08\x2a\x63\xc7\x37\x8b\x06\x54\x0b\x8d\x39\xaf\xa2\xf1\xa9\x65\x0a\x26\x7e\x27\x36\xdc\xa8\x42\x98\xa3\x77\xd7\xd7\x97\xc8\xdc\x53\xde\x43\x38\x49\x18\xcd\x67\xe6\xa8\x2b\x24\xd2\xa0\xb2\xf1\x2d\xe6\x04\x75\x4d\x5b\x98\x48\xa1\x85\x1e\xe7\x93\xbd\x64\x29\x83\x0b\x1a\x02\x0f\x01\x9d\x8a\x64\x9c\x75\x96\xe8\x9f\x7f\xff\xf7\x5f\xff\x86\x76\x77\x9a\x07\xaf\xd1\xb9\x90\x84\xa2\x0e\x96\xfa\x5f\xff\xe0\xa8\x51\xce\xfa\x22\xad\x93\x23\xd7\xed\x9b\xc7\x0e\x15\x16\x9a\x4c\xf5\x3e\x07\x0c\xf3\x3b\xcb\xaf\x01\x78\x2e\xf6\xb7\x57\x89\xf1\x09\x18\x60\x05\x04\xa5\x9c\x80\x44\x9d\xf7\xd7\x88\x19\xc9\x14\xbc\x46\x0a\x00\xcd\x70\x56\x47\xae\xdb\xa3\x3a\x4a\x83\xfc\xdd\x7b\x8c\x4d\x02\x3d\xdc\x75\x63\xb3\x3b\x6e\xc0\x44\xe0\xc6\x58\x69\x90\xee\xc5\xfb\xd3\xf6\x87\xab\xb6\x13\x93\x79\x19\x8b\x67\x2b\x26\x8f\x89\x9f\xed\x2d\x01\x8d\x29\x53\x8e\xb1\xb8\x96\x34\x48\x35\x1c\x3d\x45\xa2\xc5\xdb\xb3\x1a\x67\xa1\x54\x1b\x3b\x55\x57\x08\xfd\xbc\xb8\xa9\x0d\xe5\x96\x44\xd0\xa9\x89\xae\xe5\xf1\xf3\x65\x19\xeb\xba\xdd\xb9\xbc\x38\xb9\x6e\x5f\xa1\x32\x61\x15\x6f\xef\xaa\xd3\x18\xe0\x5a\x8e\x67\xde\x25\x8e\xec\xe9\x5f\x23\x6c\x0d\x71\xc2\xb0\x86\xea\xb0\xd7\xd3\x72\x9a\x1e\x68\x78\x97\x75\xed\x0f\x0f\x93\x17\xa9\xa1\x60\x42\x3e\x3e\xd6\xe6\xd4\xe5\x40\x29\x77\x02\x7b\x0a\xcf\xd3\xf8\xf1\xb1\x9e\xee\x34\x99\x1f\x8b\x4c\x51\xcc\x49\xec\xf1\xd1\x73\x35\x59\x87\xd6\xb4\x7c\x2f\xf0\xab\xc2\x91\x0c\x33\xa8\x6f\xeb\x46\xa4\xa6\x74\xf2\xee\x71\x33\x19\x0e\xaa\x88\xa6\x33\xab\xa3\xcd\xd6\x6a\xb3\xbd\x33\x23\xb8\x25\x3b\x56\xf6\x3d\xc0\x20\xd4\xb6\x14\xc3\x72\x3c\x46\xa8\x4a\x18\x1e\x1f\x21\x2e\x78\xfd\x54\x96\xc9\x27\x98\x69\x59\x5a\xd6\x9b\x65\xe5\xa3\x20\x94\x60\x42\x28\xef\x1d\xa1\x9d\x64\x84\x9a\xfb\xd5\xaf\x65\x51\x11\xed\xf9\x67\xb9\xc4\x9e\x1b\xed\x2d\x07\x9a\xe9\xb4\x18\x0e\x80\xa1\xec\xdb\x4e\x24\x8d\xb1\x1c\x97\x2f\x6d\xca\xf6\x6a\x29\xb5\xd5\x03\x83\x44\x96\x2f\xa8\x12\x09\xb6\x0a\xa5\x60\x2c\x3b\x77\xfa\x9e\x71\x07\xff\xa1\xdc\xd9\x47\x63\x99\x6c\xcd\x73\x13\xb9\xa4\xfd\x58\xd5\x7a\xac\xd2\x6b\x3e\x42\x4c\x17\x6b\x8e\xce\xf0\xdb\xa8\x98\xf3\xfa\x55\x75\x9c\xa4\x3b\xff\x42\xf4\x7e\x13\xa5\x98\xe8\x3d\x45\xa1\xcd\x52\xec\xe2\xd8\xac\xfc\x39\x65\x2e\x9b\x4e\xe6\x19\x9b\x67\xd3\x92\x7e\xbd\x4d\xf7\x34\xc9\x53\xd6\x8f\x9f\xde\xe7\x99\x6a\x61\x8e\xf1\x1f\x1e\xc8\xf4\x6c\xbe\x24\x11\xad\x72\xc6\x3c\x83\x4d\x7d\xb1\x74\x4f\x67\x9a\xdb\x26\xe7\x9a\x85\xec\x4b\xf8\x3c\xa5\x3d\x5d\x02\xa5\xb1\x4e\xd5\xac\x04\xb9\x8f\x3a\xf9\xa3\xd3\x22\x59\xaf\x10\x63\xdd\x6b\xb0\xec\x67\x40\x61\x68\x97\x63\xb2\xac\x2c\xa5\x92\xb6\xac\x62\x8f\x2d\xff\x86\xc2\xd0\x74\x0a\x5f\xc0\x03\x08\xd5\x2b\x79\xb4\x09\xd5\xf3\x3c\x16\xbb\x97\xe7\xe6\x47\xa4\x2d\x2f\xfb\xcf\xa5\xff\x9f\x00\x00\x00\xff\xff\x5d\x91\x02\xf7\xca\x29\x00\x00")

func tmplIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tmplIndexHtml,
		"tmpl/index.html",
	)
}

func tmplIndexHtml() (*asset, error) {
	bytes, err := tmplIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/index.html", size: 10698, mode: os.FileMode(420), modTime: time.Unix(1506711953, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplJsMappingJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\xdf\x8b\xe3\x36\x10\x7e\xcf\x5f\x31\xa8\x0b\xb2\xd9\xc4\x59\x28\xa5\xe0\x6c\xf6\xe1\xb6\x85\xa3\xf4\xda\xc2\x5e\x9f\xb6\xcb\xa1\xd8\xb3\xb1\xee\x64\x49\x95\xc6\xbb\x31\x25\xff\x7b\x91\x63\xe7\x9c\xd8\xc9\xe5\x60\xe7\x29\xf2\xcc\x7c\xf3\xe3\xfb\xa4\x3c\x57\x3a\x23\x69\x34\x7c\x10\xd6\x4a\xbd\x8e\x72\x53\x0a\xa9\x63\xf8\x6f\x32\x01\x00\xa0\x42\xfa\x64\xf7\x0d\x96\xb0\xfb\xd1\x38\xe6\xf3\xcc\x94\x56\x2a\x04\x2a\x10\x08\x4b\xab\x04\x61\xe3\x7a\x11\x0e\xca\x1d\xdc\x27\x6f\x2a\x97\x21\x2c\xe1\x2a\x62\x3f\xb4\x1f\x67\xa8\xc9\xd5\x2c\x4e\x0a\x2a\x55\x14\x2f\x06\x49\x1d\x1a\x2c\xe1\xbd\xd0\xb9\xc2\x95\x70\x3e\x69\xeb\x45\x87\xd0\xf1\x62\xb2\xcf\x7f\x96\x4a\xfd\x2e\x3d\xc1\x12\xba\xb9\xa2\x30\x09\xb4\x76\x95\xac\x91\x7e\x7b\xf8\xf3\x8f\x88\x15\x44\x36\x9d\xcf\x19\x5c\xb7\x43\xc1\x35\xb0\xb9\xb0\x72\xde\xc2\xb3\xe9\x57\x8c\x5c\x90\xe8\xe3\x74\xf5\x24\x61\xe9\x61\x09\x8f\x4f\x8b\x03\x5f\x7f\x56\x12\xab\xb0\xa3\x95\xc9\xc3\xc4\x58\x5a\xaa\xbb\x91\xbf\xb6\x85\x22\x2b\x9a\x2a\xbd\xa2\x5f\xb0\x9e\x76\x1b\x39\x2e\x1e\xac\x75\x3d\x72\x4f\x82\x2a\xff\x29\x33\xca\x38\xfe\x04\x4b\x80\x35\xd2\x7d\x38\xbd\xab\x1f\x1a\x5f\xb7\xb2\xc4\xa1\xb7\x46\x7b\x4c\x76\x39\xf7\x26\xc7\xa3\x5e\x0e\x90\x4b\xa4\xc2\xe4\xe3\xc8\x1f\x1a\x5f\x0f\xf9\xdf\x0a\x3d\x25\xbb\x94\x11\xd0\xb0\xaf\xc0\x37\x2c\x07\x34\x77\x20\x23\x59\xa7\x37\x29\xac\x45\x9d\x47\x01\xf2\x28\x6f\xdb\x3b\x6f\x3b\x79\x6c\x17\x3d\x3d\xf7\x75\xd2\xfe\x6c\xdd\x57\x11\xdf\xd7\x0b\x7c\xf0\x38\x31\x3a\xe2\x99\x92\xd9\x17\x3e\x05\x9e\xac\x48\xcf\x5e\x24\xbe\xce\xda\x28\x3e\x1d\x97\x5a\x18\xb7\x72\xb2\x11\x7e\xa8\x19\x27\x01\x2e\x62\x95\x93\xac\xd7\xdf\xf7\x28\xb2\x71\x55\x4e\x5e\x20\xcc\xcc\x68\x42\x1d\xe6\x0b\xd8\x89\x27\x27\xf5\x5a\x3e\xd7\xad\xc6\x74\xa5\xd4\x14\xd8\x3f\xc4\xe2\x83\xd4\x77\xc6\x90\x27\x27\xec\x2f\x52\x28\xb3\x4e\x7c\x61\x5e\xa3\xa1\xf2\x48\x92\xc2\x14\x78\xfb\x64\x40\x8e\xcf\x52\xcb\xd0\x10\x9f\x0e\xc5\x84\xde\x8b\x75\x08\xbf\xb5\x0e\xef\x38\x5c\x83\xaf\x35\x89\xcd\x7b\xb9\x2e\x94\x5c\x17\x14\xb5\xdd\xc6\x70\x0d\xfc\x76\xde\x44\x9d\x25\x74\x4f\xec\xe5\x94\x61\x2e\xe9\x8d\x28\x0b\x61\xa8\x73\x6b\x64\xb3\xe0\xcb\x79\x1b\x63\xbd\x03\x7a\x23\x4e\x87\x94\x86\xcc\x2b\xc2\x0d\x35\x63\xf1\xdb\xf0\x53\x38\x14\x20\xf3\x25\x0b\x87\x59\x65\x73\x41\xd8\x2d\x87\x81\xa7\x5a\xe1\x92\x95\x52\xcf\x5e\x65\x4e\x45\xfa\xd3\xcf\x37\x76\xb3\x08\xe7\x02\x03\x5f\xe9\x8f\x37\x37\x76\xc3\xee\x6e\xe7\x1d\xd8\x1d\x3f\x7e\xd1\x82\x27\x79\x11\x6a\xcf\xed\x81\xfb\x2d\x44\x17\x18\x3d\x27\xb7\xa6\x85\xa1\x7f\x55\x11\x19\xed\x53\x78\x1c\x96\x08\xa6\xc4\x0a\x55\x0a\xfc\x5e\xe8\x0c\xd5\x48\x81\x60\xa2\x61\x2a\xed\x71\xd6\xb4\x3e\xf6\x4a\x77\xb6\x8b\x48\x32\x65\x3c\x1e\xbf\xff\x9d\x6d\x07\x5f\xb7\xd3\x13\x90\x5d\x9b\x0f\xe2\x05\x4f\x34\x99\x79\x7f\xaf\x84\xf7\x29\xf0\x70\x03\xac\x93\xa5\x70\xf5\x9b\x4d\x74\x28\xc9\x70\x09\x47\xd4\xc4\xe3\x46\x04\x27\xe6\x6d\x6e\x82\xf8\x2c\x36\x23\x74\xf7\x8d\x6a\x1b\x98\xff\xeb\xef\x8f\x27\xba\xef\xac\x72\x2a\xdd\xdf\xcd\xf3\xa1\xe1\xd2\xa4\xdd\x00\xe7\x43\x7d\x95\x65\x18\xf6\x78\x7c\x45\x07\xac\xee\xff\x4d\xa2\x18\xb6\xe7\x41\xd1\x39\xe3\x46\x20\x85\x42\x47\x11\xfb\x75\xe7\x66\xd7\x23\x77\x3d\x8e\x17\x83\xc2\xdf\xa8\xd6\xce\xf9\xb1\x59\x24\x13\xd6\x2a\x99\x89\x50\x77\xfe\xd9\x1b\xcd\xbe\xbd\xaa\x5d\x26\x0f\xd1\xfc\x64\xf0\xf6\x72\x5d\x3f\x5d\xf8\xc0\x4f\x26\x93\xed\xff\x01\x00\x00\xff\xff\x3c\x1c\xde\x73\xa3\x0a\x00\x00")

func tmplJsMappingJsBytes() ([]byte, error) {
	return bindataRead(
		_tmplJsMappingJs,
		"tmpl/js/mapping.js",
	)
}

func tmplJsMappingJs() (*asset, error) {
	bytes, err := tmplJsMappingJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/js/mapping.js", size: 2723, mode: os.FileMode(420), modTime: time.Unix(1506671021, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplJsRequest_loggerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x55\x4d\x6f\xe3\x36\x10\xbd\xfb\x57\xcc\x6a\x17\x30\x59\xbb\x4a\xb6\xe8\x49\x86\x80\xa2\x69\x8a\xa0\x48\xb6\xe8\x26\x45\xd1\x53\x40\x4b\x13\x59\x58\x8a\x54\xc9\x61\xbb\xc6\xc2\xff\xbd\x20\xa9\x6f\x38\x1f\x3a\xe4\x30\x7e\xf3\xf8\xf8\xe6\x85\xf3\xe4\x54\x41\xb5\x56\xf0\x19\xff\x71\x68\xe9\x56\x57\x15\x1a\xc6\xe1\xdb\x0a\x00\xe0\xe2\xa2\xd0\x4d\x5b\x4b\x04\x3a\x20\x10\x36\xad\x14\x84\xe1\xa7\x7f\x85\x01\xab\x9d\x29\x10\x72\xf8\xc0\x92\xf7\x26\x32\x7c\x8f\x8a\xcc\x31\xe1\xe9\x81\x1a\xc9\xf8\x6e\x00\xf7\xdd\x90\xc3\x8d\x50\xa5\xc4\xbd\x30\x36\xed\xf8\x59\xa4\xe2\xbb\x55\xc0\xd3\xa1\xb6\xa9\x72\x0d\xe4\x70\x19\x2b\x83\x50\xd7\x96\x82\xf0\xa1\x26\x89\x83\x4c\xff\x7d\x60\xa5\x2e\x5c\x83\x8a\x78\x2a\x88\x0c\x4b\xc8\x63\x92\x2d\x24\x9f\xae\xff\x82\xcf\xd7\x7f\xfc\x79\x7d\xff\xf0\xee\x5d\xd2\x49\xf2\x9f\x45\x7a\xa8\x1b\xd4\x8e\xd8\xc0\xef\x49\x5f\x22\xbb\xbb\xd3\xc5\x17\xb8\xd2\xca\x6a\x89\x09\xdf\xc1\x69\x0b\x3f\x5c\x5e\x5e\x76\xb4\xa7\x85\xdc\x0a\xa9\xb3\xd6\x9f\xc4\xa8\x6e\xd0\x92\x68\xda\xa9\x74\xef\x8e\x19\x41\x90\x83\xc2\xff\xe0\x17\x41\x13\xfc\x77\x1f\xc7\x33\xfa\x1e\x6f\x04\xc5\x86\x49\x7b\x5a\x21\x85\x5e\x0e\x1b\x48\x2e\x12\xd8\x0c\x4d\xfe\x63\x0b\xe8\x9d\x56\x74\x08\xd8\x8f\xe7\x1b\x16\xf8\x5f\x9d\x94\x7f\xa3\x30\x91\x1e\x7e\x82\x57\xf0\x37\xda\x19\x1b\xc1\xd9\x2b\xd0\xbb\x5a\x39\xc2\x37\x82\xef\xb1\xd0\xaa\xb4\x6c\xe2\x89\x41\x72\x46\x0d\xb6\x9c\x1f\x48\xcc\xcf\xad\xb0\xfd\x5c\xe6\x3e\xcf\x23\xb5\x7e\x2f\x85\xa5\xc7\xd8\x53\xae\x79\x4a\xf8\x95\xd8\xb3\x33\x7d\x3e\x03\x57\x5a\x85\x56\xe5\x9a\xad\x17\x28\x96\xf3\xb7\x24\xc8\x59\xc8\xc3\x8f\xa9\x41\xdb\x6a\x65\x31\x8d\xe5\x2b\x5d\xe2\x7c\xf4\x0d\xd2\x41\x97\x23\x3c\xa8\x49\x63\x75\x8e\x6c\x05\x1d\x96\x38\x5f\xdb\x9d\x8b\x1f\xe4\x60\x8f\x8a\xc4\xd7\x9b\xba\x3a\xc8\xba\x3a\x10\xfb\xed\xfe\xf7\x4f\xa9\x25\x53\xab\xaa\x7e\x3a\xb2\x29\xcf\x16\x9c\x2a\xf1\xa9\x56\x58\x6e\xe1\x47\xce\x97\x94\xf1\x0e\x6f\xe6\x8c\xf0\x97\x49\xa5\xae\xde\xce\xe7\xe4\x2b\x12\x0b\x2d\xb5\x81\x3c\x0e\x48\x6a\xf3\xf3\xf1\x3e\xf8\xcd\xa2\xed\x7c\xb5\x8c\xd6\xb7\xde\xa8\x47\xe5\x9a\x0c\xc2\x34\xbb\x4a\x06\x83\x2b\xfd\x55\x32\x18\x2f\x65\xa4\xae\x32\x2f\x7f\x68\x78\xf4\x99\xca\x96\x0f\x44\xd0\xee\x13\xc5\x47\x60\xa1\x4b\xcc\xba\x84\x8c\xd5\x38\xec\xac\x8b\xc2\x58\xf7\xc3\xcd\xc2\xd8\xa7\x0c\x52\x9b\xac\xbb\xef\x69\x96\xd2\xf0\xd4\x4a\x5d\x5d\xfb\x67\x1b\xf2\x31\xb5\x6c\x19\xd3\xfe\x51\xde\x6c\x96\x2e\x86\x6c\xf7\x3e\xc6\xa0\xf7\xe0\x2e\xed\xf3\x0e\xbf\x1a\x20\x1f\x36\x02\xeb\x18\x26\xa8\xe9\x42\x21\xb1\xf7\x0b\x68\xaf\x4b\xbf\x56\x5a\x83\x2d\xaa\x92\x79\x8e\x49\xc3\x6c\x2d\x2c\xcb\xcb\xff\xf6\xd1\xe4\x6e\xdf\x9c\x76\xab\xd3\x6a\x35\x7d\xf5\x0d\x8a\xf2\x38\xdf\x0a\xab\x5e\xd8\x9e\xd4\x95\x44\x61\x6e\x75\x95\xf0\xb4\x90\x75\xf1\xe5\x0c\xf2\xe5\x6b\x60\xd3\xd2\xb1\x57\x7a\xea\x75\xf8\x17\xa7\xc7\x7b\x91\x6b\x9e\x6a\xc5\xd6\xe1\x88\xf5\x16\xd6\x1d\x87\x59\x6f\xe1\xfc\x81\xde\xdd\xba\x0c\x1b\xd9\x4f\x80\xa7\x9e\x85\x25\x24\x4c\x85\x94\x2c\x0c\x4e\x60\x03\x75\xc9\x53\xd2\x55\x35\xda\x16\xc4\xac\xfc\xdf\xff\x03\x00\x00\xff\xff\x02\x4a\x2c\xba\x1d\x08\x00\x00")

func tmplJsRequest_loggerJsBytes() ([]byte, error) {
	return bindataRead(
		_tmplJsRequest_loggerJs,
		"tmpl/js/request_logger.js",
	)
}

func tmplJsRequest_loggerJs() (*asset, error) {
	bytes, err := tmplJsRequest_loggerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/js/request_logger.js", size: 2077, mode: os.FileMode(420), modTime: time.Unix(1505404230, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplJsSortingJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x55\x41\x6f\xdb\x3c\x0c\xbd\xf7\x57\xf0\x10\xc0\xd2\xf7\x39\x42\x7b\x5d\xd7\x01\x69\xd7\xc3\x80\xa1\x97\xac\xbb\x2b\x32\x13\x6b\x95\x25\x4f\x62\xdc\x16\x45\xff\xfb\x20\xc7\x89\x65\x3b\x29\x72\x18\xa6\x4b\x90\x88\x7c\x8f\xef\x91\x54\xd6\x5b\xab\x48\x3b\x0b\x4b\xe7\x49\xdb\x0d\x23\xb9\x32\xb8\x44\x83\x8a\x9c\xcf\xa1\xfd\x7a\x6f\xb0\x42\x4b\x81\xc3\xdb\xc5\x05\x00\x80\x41\x82\xd0\xc5\x3c\xd6\x70\x03\x99\xd8\x98\xd7\xba\xd4\xca\xd9\xb9\x2a\xb1\xf1\xce\xce\xb7\x75\x76\x3d\x89\xfe\xea\x9e\xed\x89\xf8\xc2\x3d\xdb\x49\x06\x16\x77\x46\x86\xf0\x20\x2b\x8c\x69\xfb\x1f\xb3\xeb\x5d\x21\x87\xf2\x83\xf3\xf4\x23\xd6\xca\x9c\x2f\xd0\xe7\xa0\x09\xab\x70\xe7\xb6\x96\xf8\x5b\x1b\xba\xc7\xf5\xee\x39\xc0\x0d\xcc\x86\x4a\xe1\x7f\xc8\x80\x56\xae\x78\x05\x20\x9f\x71\xb1\x41\x62\xbc\x63\x89\x27\xa6\x89\xc8\xc2\xf6\x9c\x4c\xe6\xb0\x3a\x58\x92\x52\x2c\xe0\x06\x36\x48\x3f\xa5\x61\x92\x5f\x4f\xae\x6f\xfb\xeb\x55\x4a\x11\x8f\x5e\xb3\x05\x7c\x86\xdb\x88\x0b\xa3\xe3\x91\xb6\xde\xc2\xfc\xea\xbf\x56\xe3\x10\xf8\x7d\x0a\xf3\xe5\x43\x98\x33\x50\xba\xc8\xcb\x3e\xe6\x3d\xad\xf7\x60\x7e\x27\x06\x4d\xc5\xdf\x26\x6a\x9b\xd6\xec\x78\x27\x54\xa9\x4d\xe1\xd1\xb2\x8c\x8a\x8c\x0b\xfc\xcd\x92\x2e\x09\xc2\x17\x62\x5c\x90\x7b\xac\x6b\xf4\x77\x32\x20\x1b\x99\xa7\xd7\x6c\x26\x74\x78\xd8\x56\xe8\xb5\x62\x0d\xe7\x53\x75\x91\xae\x96\x3e\xe0\x37\x4b\xac\xc9\xaf\x2e\xf9\x19\x0a\x9b\x44\x61\xaf\x6f\x26\x50\xaa\x92\xc5\xce\xe7\x07\xb1\x4c\xdb\x02\x5f\xf2\x38\x0f\x63\x73\x47\x23\x35\xd0\x1b\x27\x2b\xe3\x42\xd6\x35\xda\x22\x42\xf2\xa1\xa9\x09\xf5\xc1\x56\x49\x24\x55\xf9\x5d\x07\x42\x8b\xbe\xf5\x2a\x87\x8e\x1e\xf7\x2b\xd9\x97\x30\x6b\x23\xb8\x58\x6b\x5b\xb0\x7e\x3b\xb9\x70\x96\x65\xca\x68\xf5\x94\x25\x32\x8e\x74\xaa\x6f\x46\xdb\xb2\x1d\x5a\xed\xb1\x59\x18\xc3\xb8\x30\x68\x37\x54\x0e\xdd\xec\xd7\x6e\x7e\x05\x79\xd2\xcd\x61\x58\x25\xfd\xd3\x22\x2c\xbb\xe5\x65\x33\x46\xa5\x0e\xfc\x88\x05\x27\x75\xc4\x77\xe3\x1f\x29\xf9\x2b\x42\xc6\xbd\x1c\x25\xba\xd5\x2f\x54\x94\x0e\x90\x32\x28\xfd\x32\x7d\xf3\xd2\xe9\xdf\xc5\x0b\x59\x74\x57\x93\xc7\xf1\x04\xed\x31\x54\x48\x47\x26\x9d\x13\x8f\x95\x6b\xf0\x63\x82\x61\xd6\xae\x2b\xe7\xe4\x8d\x0b\xd3\x56\xd3\xa0\x94\xc1\x1f\x8d\x58\x3b\x7f\x1f\x77\x6f\xb8\x02\x43\xac\x6e\x77\x7b\x88\x88\x09\x9f\xda\x8f\x2e\xee\xfd\x4f\x00\x00\x00\xff\xff\x8f\xda\xb9\x25\xdf\x06\x00\x00")

func tmplJsSortingJsBytes() ([]byte, error) {
	return bindataRead(
		_tmplJsSortingJs,
		"tmpl/js/sorting.js",
	)
}

func tmplJsSortingJs() (*asset, error) {
	bytes, err := tmplJsSortingJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/js/sorting.js", size: 1759, mode: os.FileMode(420), modTime: time.Unix(1506712026, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplJsUtilJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\x51\xaf\x93\x30\x14\xc7\xdf\xf9\x14\x27\xc4\x5c\xca\x26\x63\x9a\xbd\xb8\x8d\x11\xbd\x12\x7d\xd0\x68\x72\xaf\x2f\x52\x96\x74\xd0\x31\xb4\x2b\x4b\x5b\xd4\x79\xd9\x77\x37\x65\x64\x63\x5c\x70\x3e\x78\xfb\x40\xd3\xff\x39\xfd\x9d\x3f\xe7\x14\x00\x60\x5d\xf0\x58\x65\x39\x87\x94\xaa\xdb\x9c\xe5\xe2\xcd\xfe\x4e\x11\x55\x48\x24\xab\xed\x36\x4f\xa8\x0d\x0f\x06\xd4\x2b\x5b\x43\x23\x02\x9e\xe7\xc1\xcb\xf1\x18\xca\x12\x1e\xa9\x2f\x9a\xf7\xf4\x12\x54\x15\x82\x83\x29\x8b\x38\xa6\x52\x9a\xb3\x53\xf4\x00\x94\x49\xda\x05\x9f\x8c\x27\x7d\x98\x84\xf0\x94\x8a\xc7\x94\xee\xec\x9f\x44\xf0\x8c\xa7\xcd\x74\xe3\xf8\x35\x7a\xfa\xf0\x91\xaa\x4d\x9e\xa0\x6d\xb5\xb5\x7b\x70\x54\x2b\x8b\xd6\xbb\xe0\xde\xea\x33\x99\xf1\x75\xde\xfd\xa3\x4d\xc2\xe7\x4f\x77\xfd\x88\xbf\xb6\xeb\x82\xf2\xe5\x3f\x40\xde\x06\x1f\x82\xfb\xa0\x97\xf3\x34\x4d\x97\x7b\xae\xc8\xaf\xf7\x59\xba\x61\x59\xba\x51\xe8\x9b\xcc\x79\xd3\x81\x3e\x83\x57\x6d\x23\x41\x77\x8c\xc4\x14\xb9\x37\x6e\xfa\x1c\xac\x1b\xb2\xdd\xcd\x2c\xfb\x2c\xcf\x8f\x32\x53\x17\xea\xe2\xa8\xa6\x5a\x3d\xbb\xa9\x7d\x5e\x72\x91\x89\x30\x2e\x42\xe2\xfc\x7e\xed\x7c\x1d\x3b\xaf\xa2\x87\xc9\xa1\xc4\x38\x5c\x16\x51\x19\x2e\x31\x36\x23\x7b\x60\x22\x2c\x07\x53\xdb\x2f\xf1\x0a\x29\x51\xd0\x72\x4d\x98\xa4\x25\x2f\x18\xb3\xf1\xaa\x74\x7c\x9c\x0c\x91\x3f\xc5\x23\x9c\x0c\x6c\x1f\xf9\xd3\x90\x06\x51\x38\xc4\x4e\xa4\x23\xb6\x6f\x6b\x3b\xa7\xdf\x47\x5b\xa2\xe2\x4d\xbb\xe5\x3f\x88\x80\x98\x49\xf0\xc0\xe2\xc5\x76\x45\x85\x35\xbb\x88\xeb\xc9\xb9\x4b\xd3\x1d\x29\x2a\x55\x8d\x68\x33\x4e\x79\xd3\x67\x57\xf3\xf4\xaa\xeb\x7d\xa7\xfb\x56\xb1\xde\x51\xb7\x6e\x4a\x25\x32\x9e\x76\x5d\x36\x3a\x50\x95\xb5\x73\xff\xae\x5a\xac\x8b\xac\xf2\x9c\x51\xc2\x5b\x55\x9a\x4c\x3d\x88\x7f\xa5\xe9\xdc\x36\xaa\xeb\x35\x5b\x73\xb9\x23\x1c\x62\x46\xa4\xf4\x4c\x0b\x86\x15\x60\x08\x96\xb9\xd0\x87\xaa\x8e\x3e\xce\x5d\x9d\xb7\x68\x20\x0f\xf5\x93\x3b\x18\x7f\x02\x00\x00\xff\xff\x60\x64\x0c\xd1\x73\x05\x00\x00")

func tmplJsUtilJsBytes() ([]byte, error) {
	return bindataRead(
		_tmplJsUtilJs,
		"tmpl/js/util.js",
	)
}

func tmplJsUtilJs() (*asset, error) {
	bytes, err := tmplJsUtilJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/js/util.js", size: 1395, mode: os.FileMode(420), modTime: time.Unix(1505404230, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x4d\x6f\xdb\x46\x13\xbe\xfb\x57\x0c\xf8\xbe\x87\x16\x30\x4c\xd7\xbd\x04\xbe\xe5\x0b\x85\x51\xbb\x48\xe5\xa4\x40\x11\x04\xc1\x88\x1c\x89\x1b\x2f\x77\x99\xdd\xa1\x5d\x36\xd0\x7f\x2f\x96\xa4\x28\x92\xa2\x24\x52\xa2\x1c\x23\xf0\xc9\xd6\x7e\xcc\xce\xcc\xf3\xcc\xc7\x2e\xbf\x9d\x00\x78\xf6\x01\xe7\x73\x32\xde\x25\x78\x17\x67\xe7\xde\xa9\x1b\x13\x6a\xa6\xbd\x4b\x70\xf3\x00\xde\x3d\x19\x2b\xb4\x72\x2b\x7e\x29\x57\x00\x78\x2c\x58\x92\x1b\xbb\xb9\xd1\xc1\xdd\x72\x34\x24\x1b\x18\x91\x70\xb9\xfe\x26\xd6\xc1\x1d\x08\x0b\x08\x4c\x96\x85\x9a\x03\xaa\x10\x66\x68\x19\x12\xa3\x59\x73\x96\xb8\x41\xd6\x5a\xc2\x4c\x1b\x08\xe9\x9e\xa4\x4e\xc8\xd8\xa5\x44\x29\x02\x52\x96\x2a\x75\x00\x3c\x85\x71\x71\xf2\xd5\xfb\x72\x15\x80\x97\x1a\xe9\xc6\x22\xe6\xc4\x5e\xfa\xfe\x5c\x70\x94\x4e\xcf\x02\x1d\xfb\x5f\x62\x34\x2c\xd4\x8b\x0b\x3f\x76\xea\xf8\x53\xa9\xa7\x7e\x8c\x96\xc9\xf8\xd7\x57\xaf\xdf\xfe\x71\xfb\xf6\x2c\x0e\xbd\x5c\xd0\xe2\x04\x60\x91\xfb\x20\xd2\x96\x9d\x40\xa9\x03\x94\xee\xc7\xe5\x8b\xf3\x17\x17\x85\x7f\x18\xe7\xd6\xbb\x84\x8f\xf9\x96\x35\xb5\x0c\x7d\x4d\xc9\xf2\x4a\xb5\x96\x53\xde\x47\x04\x85\x63\x0c\x05\xda\x84\x16\x50\x4a\x28\x77\x59\x10\xec\xc6\x49\xdc\x93\x05\xa1\x20\xa6\x58\x9b\x0c\x7e\x42\x06\x49\xce\x6f\xa9\x62\x21\xdd\x2a\x61\xc1\x90\x25\xfe\xf9\x0c\xde\x47\xc2\x42\x8c\x77\x94\x6f\x4f\xb4\xb5\x62\x2a\x09\x58\xc3\x3d\x19\x31\xcb\x80\x23\x64\xc0\xe5\x21\x10\x23\x07\x51\x8e\x06\xd8\x84\x02\x31\x13\x01\x24\xc8\x4c\x46\xc1\x03\xda\xa5\x02\xe1\x69\x0e\x17\x4a\xab\x9d\xac\x19\x71\x10\x01\x47\xb4\x52\x36\x24\x46\x21\xed\x59\xe9\xbd\xd3\x6e\x8f\xd8\x80\x14\x1a\xa1\x37\xba\xe4\x25\x2c\x97\x38\xab\xc8\x5a\x52\x2c\x50\xca\xcc\x29\xc8\xc8\x04\x31\x3a\x85\x09\x1e\x22\x6d\xa9\x18\xb3\x10\xa0\x82\x29\x01\x9a\xa9\x60\x83\x46\xb8\xf5\xd6\x8a\xb9\xa2\x70\x87\x46\x31\x26\x8e\x78\x1b\x15\xfa\x5b\xa7\xb9\xf4\x18\x15\xce\x9d\xbd\xb1\x66\x92\x19\x64\x3a\x35\x60\x39\x9d\x42\x29\xc1\xc2\x43\x44\x8a\xee\xc9\xb8\x39\x50\x44\x35\x26\x7d\xca\xd9\x32\x45\x4b\xef\x90\x23\x27\xd7\xc7\x44\x14\x1c\xb2\x41\x44\x31\xad\x68\x94\x33\xd7\xab\x36\x05\x5a\xd9\xb4\x31\x8f\x49\x22\x45\x80\x4e\x43\xff\x8b\xd5\x6a\xb5\x36\x31\x3a\x4c\x83\x9e\x6b\x91\x23\xbb\x8a\x6d\xbf\x44\xd2\x47\x29\xeb\x21\x36\x27\xae\xfd\x74\xea\xa6\x71\x8c\x26\x73\x36\xfc\x46\xdc\x60\x6c\xe5\xc4\x76\x64\x94\x63\xcb\x78\xa8\xc6\x3e\xd5\x36\xb8\x58\xcf\xf5\xbc\x0a\x77\xc9\x5e\x33\xb3\x1c\xef\x32\x76\xfd\xa0\x04\x0d\xc6\xc4\x2e\xb3\x5c\xc2\xc7\xfa\x8c\x21\x9b\x68\x65\xc9\x36\x2c\x06\xf0\x2e\xce\xcf\x5b\x43\x1d\xcc\x35\x06\x33\xd0\xb3\x22\xa4\x6a\xea\x16\x5e\x73\x20\xe3\x9a\x10\x00\xef\xff\x86\x66\x6e\xff\xff\xfc\x90\x66\x42\x09\x27\xcf\xfa\x2e\x95\xde\x38\x41\xd7\xa2\xee\xb0\x25\x9f\xd6\xff\x5f\xfe\xb7\xa8\xb3\x7d\x85\x6a\xae\x14\x85\x43\x91\x2d\xb7\x1d\x15\xe1\x6d\x67\x3c\x23\x3d\x18\xe9\xbc\x12\xf4\xc5\x79\xe2\x16\x83\x65\x6d\x8e\x04\xf2\xce\x03\x9e\x24\xc2\x87\x62\xfa\x32\x70\x7f\x27\xa5\x0a\x23\x80\x9a\xaa\x3d\x03\xb8\xda\x78\xd4\x10\xde\x7e\xca\x93\x84\xf8\x7b\x07\x71\xcd\x0e\x4b\x41\x6a\x04\x67\xb9\x7d\xdb\x79\x50\x34\x71\x75\x12\x24\x45\x77\xda\xcd\x82\xbf\x8a\x9e\xef\x18\xd0\x6f\x11\x3d\x26\xde\xb5\xfd\x2d\x3c\x37\x35\xd9\xe5\xb4\xc8\x51\x9e\xea\x30\x6b\xcf\xb8\x0d\xc2\xe4\xa1\xc4\x26\xa5\x03\x91\x9f\xb4\x7d\x06\x1b\x31\xff\x61\xb8\xdb\xcd\xd1\x65\xe3\x6e\x8b\x12\xf4\x79\x40\x23\x59\x54\x09\x97\x49\xca\x4a\x51\xc9\xda\x45\xd9\xea\x42\xd1\xbf\x18\xed\x3a\xe6\x49\xa6\xab\x27\x53\x91\x96\xf7\xa5\xa1\x8d\xa4\xbb\xe5\x2e\x6f\x4a\xbb\x40\x5d\x9e\x31\xa8\x8b\xdc\x74\xc0\x93\x84\xd3\xc5\x1c\xac\xf0\x01\x29\xd6\x33\xd8\x3e\x71\xfc\xa6\xfa\x7d\x60\x30\x97\x9e\xf4\xbf\x39\xbf\x7e\x76\x77\xc5\xc5\x10\xc8\xe3\xa6\x7d\x63\x03\xbe\x45\xfc\xe3\x16\x9f\xca\x3b\xdd\xe5\xa7\x6b\xa6\x8b\x09\x5d\xeb\x38\x4b\x8a\x27\x13\x36\xf5\xf7\x89\x72\xb6\x55\xc4\x8e\x5b\x6f\x8e\xcf\xd6\x41\x4c\xad\x9e\x6a\x92\x74\x33\x0b\x3f\x24\x61\xfe\x5a\x74\x3c\x22\xee\x3e\xe1\x99\x8b\xa7\xbb\xd5\x7e\xd5\xd1\xa2\xed\xdb\xbc\x8d\x5c\x34\x87\x73\x74\xbc\x16\x2f\xaf\xd7\x60\xc8\xa6\xf2\xe0\x58\x3b\xa0\xf8\xd7\x9e\x45\x25\x31\x6d\x0c\xb7\x37\xf9\xf4\x31\xc3\x6d\xf7\x09\xcf\xe1\xf6\xe3\xf2\xf0\x04\x1a\xdf\x64\x6a\x52\x57\x4f\xd8\x1d\x0d\x50\xad\x65\x59\x7d\xa6\x72\x6e\xbf\xae\x97\xb0\xca\xe1\xe8\x2e\x56\xab\x61\xc1\x14\x37\xbd\x36\x28\x51\x34\x5b\xaa\xe6\x35\xab\x53\x31\x37\xfb\x9d\x34\xab\xad\xd9\xe8\xb3\x8e\xa8\xab\xf4\xd3\xd3\x2f\x14\xd4\xf4\x4e\x8c\x0b\x5f\x16\x2d\xd6\x79\x1f\x26\x57\x6d\x1a\x6e\x4b\xda\xed\x50\x58\x11\xa3\x46\xf0\xa6\x80\x71\x65\x2f\x5f\x17\x5a\x72\x7b\xbe\x05\x2c\x3a\xc2\xb0\xaf\xa8\x76\x90\xd4\x65\x05\x5a\xb1\xd1\xb2\x9f\xa8\xd7\xe5\xe2\x2d\xc9\xbd\x96\x52\x3e\x36\xb1\xda\xe0\xe6\x0e\x0f\x75\x99\xda\xa1\x72\x39\xf2\xa9\xc1\xc0\xc9\x9a\x97\x57\xd4\x9b\xb4\x3f\xa2\x0e\xa5\x5c\xd4\x7e\x21\x1b\x83\x17\x31\x71\xa4\xc3\xd1\xc5\x26\xc5\xd7\xc1\x71\x85\x7e\x4d\xc9\x64\xb7\xf9\x82\x77\xf5\x22\xd7\x83\x3b\x7f\x76\x6e\xed\x3c\x25\x22\x0c\x7b\xcb\xfd\x9d\xb2\xfc\x11\x6b\x13\xbd\xf5\x5d\x1b\xc6\x2d\xf4\x76\x8b\xbb\x05\xe5\x1d\xe4\x28\xee\xec\x19\x32\x25\x2d\xda\x88\x76\x92\xbe\xdb\xb7\xb5\x10\xe8\xe3\xba\x55\x04\xad\x65\x97\xc1\x81\x62\x19\x39\xb5\xaf\x75\xb8\x96\xa3\x7a\xf9\x4c\x28\xa6\x39\x99\xe6\xe4\x4c\x9b\x18\xb9\x9c\xfe\xf5\xe2\x99\x3a\x1b\xa9\x53\xf3\x7e\x27\x5d\x2a\xbb\x0f\x40\xf8\x8e\xf6\xb3\xa9\xd9\x7d\x40\x77\x07\xb2\xd5\x0b\xbb\x9f\x9c\x4a\x30\x7a\x58\xb7\x49\xe5\x21\x66\xf7\xc9\x9b\xf7\x28\xd3\xb5\x50\xd8\x09\x73\xcb\xa8\x76\xa1\x1e\x8c\x59\x62\x84\x2e\xbf\x0e\x3d\x66\x4c\x86\x24\xf1\xb1\xcf\x0c\x0c\xfe\xbb\xdf\x99\x53\xad\x25\xa1\xea\x16\x5b\x7d\x23\xe8\x95\x14\x6e\xd7\xbe\x28\x2c\x9a\x77\xcc\x7f\xb2\x57\x68\xe9\xc3\xe4\x7a\xdc\xf4\xd0\xe0\xcd\xed\xba\xca\x83\x89\x53\x5e\x54\xc7\xef\x87\x5d\xee\xba\x65\xe4\xfd\xa4\x8f\x9c\x4b\x6a\xba\x29\x7a\xd8\x5f\xad\x7e\xb8\xb4\x6e\xb0\x07\xa0\x53\xde\xa8\x8f\xa0\xaa\xbb\x24\x9f\x2c\xfe\x0b\x00\x00\xff\xff\x35\x82\x09\x63\xd3\x29\x00\x00")

func tmplSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_tmplSwaggerJson,
		"tmpl/swagger.json",
	)
}

func tmplSwaggerJson() (*asset, error) {
	bytes, err := tmplSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/swagger.json", size: 10707, mode: os.FileMode(420), modTime: time.Unix(1505404230, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"tmpl/css/style.css": tmplCssStyleCss,
	"tmpl/index.html": tmplIndexHtml,
	"tmpl/js/mapping.js": tmplJsMappingJs,
	"tmpl/js/request_logger.js": tmplJsRequest_loggerJs,
	"tmpl/js/sorting.js": tmplJsSortingJs,
	"tmpl/js/util.js": tmplJsUtilJs,
	"tmpl/swagger.json": tmplSwaggerJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"tmpl": &bintree{nil, map[string]*bintree{
		"css": &bintree{nil, map[string]*bintree{
			"style.css": &bintree{tmplCssStyleCss, map[string]*bintree{}},
		}},
		"index.html": &bintree{tmplIndexHtml, map[string]*bintree{}},
		"js": &bintree{nil, map[string]*bintree{
			"mapping.js": &bintree{tmplJsMappingJs, map[string]*bintree{}},
			"request_logger.js": &bintree{tmplJsRequest_loggerJs, map[string]*bintree{}},
			"sorting.js": &bintree{tmplJsSortingJs, map[string]*bintree{}},
			"util.js": &bintree{tmplJsUtilJs, map[string]*bintree{}},
		}},
		"swagger.json": &bintree{tmplSwaggerJson, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

