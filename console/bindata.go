// Code generated by go-bindata.
// sources:
// tmpl/css/style.css
// tmpl/index.html
// tmpl/js/mapping.js
// tmpl/js/request_logger.js
// tmpl/js/sorting.js
// tmpl/js/util.js
// tmpl/swagger.json
// DO NOT EDIT!

package console

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _tmplCssStyleCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\xcd\x6e\xdb\x30\x10\x84\xcf\xe5\x53\x2c\x90\x6b\x25\xd4\xae\x83\xa6\x34\x50\x20\xfd\xc9\x6b\x04\x4b\x72\x45\x13\xa2\xb9\xc2\x92\xae\xe2\x1a\x7e\xf7\x42\x12\x5d\xfb\x50\xe7\x24\x68\xbe\xd9\x19\x71\x29\xad\x9b\x91\x4c\x1f\x4a\x93\xad\x70\x8c\x06\x05\x4e\x0a\x00\x60\x0c\xae\xec\x34\xac\xd6\xc3\xdb\x56\x9d\xd5\x7f\x8c\x4d\x11\xb4\x7d\xb5\x1b\xb4\xbd\x17\x3e\x24\xd7\x58\x8e\x2c\x1a\x1e\x7e\x3c\xff\xda\xbc\x3c\x6f\x17\xcc\xe2\x48\x9a\x48\x5d\xd1\xb0\x1a\xde\x20\x73\x0c\x0e\x1e\xac\xb5\x77\xd3\x77\x87\xbd\xb9\x9f\xbe\x59\x3f\x19\x8b\xef\x0e\xeb\x1d\xff\x26\xb9\x1f\xb1\xfa\xf9\x65\xf3\xfd\x65\x8a\x50\xaa\xcd\x14\xc9\x16\x72\xaf\xc2\x23\x9c\xa0\xe3\x54\x9a\x91\x82\xdf\x15\x0d\x86\xa3\xdb\x9e\x55\x9b\x8b\x84\xe4\xe1\x04\x35\xc1\x0b\x51\xda\xc2\x59\xb5\xe9\xb0\x37\x53\xd5\x85\x38\x94\x9e\x05\x93\xa7\x19\x1b\xe6\x48\x98\xae\xdc\xc4\x03\xd5\xc1\x18\xaf\xf2\x1e\x3d\xa5\x82\x33\xe9\xe9\x78\x05\x42\x6e\x12\x55\x41\x13\x09\x5a\xcb\x31\xe2\x90\xa9\x0d\x09\x4e\xea\x83\x0b\x79\x88\x78\xd4\x33\x6d\x84\xc7\xf9\x4c\xed\xf2\xba\x2c\xe1\x1b\x14\xc3\xee\x38\x3d\xa5\x9e\x75\x32\xea\x7f\xd4\x7d\x54\x37\xfa\xac\xdc\xdf\x5c\xd7\x75\x4b\x45\x66\x29\x21\xf9\xd7\x60\x39\xe5\xea\x1f\xd0\xb9\x90\x7c\xbd\xec\xc7\xe9\xff\xb9\x95\x0b\x0f\x1a\xd6\x17\xf5\x92\x88\x88\x8b\x30\x2f\x3e\x87\x3f\xa4\x3f\xb5\x4f\xb4\xaf\x35\xf5\x72\x6a\xc3\x65\xc8\x7d\x7d\xfc\xbc\x99\xbe\xe4\x6f\x00\x00\x00\xff\xff\xbf\x62\x65\x9b\xc7\x02\x00\x00")

func tmplCssStyleCssBytes() ([]byte, error) {
	return bindataRead(
		_tmplCssStyleCss,
		"tmpl/css/style.css",
	)
}

func tmplCssStyleCss() (*asset, error) {
	bytes, err := tmplCssStyleCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/css/style.css", size: 711, mode: os.FileMode(420), modTime: time.Unix(1506703157, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x3a\xdb\x72\xe3\xb6\xd9\xf7\x7e\x0a\x2c\xff\x3f\x1d\xef\x6c\x48\x5a\xd6\x7a\xed\xd8\x14\x67\x36\xb6\xd2\x8d\x47\xda\x75\xd6\x8e\xdd\xe4\x66\x07\x24\x3e\x89\x90\x41\x80\x06\x40\x1d\xb2\xe3\x99\x3e\x41\xdf\xa3\x17\x7d\x89\xf6\x4d\xfa\x24\x1d\x90\x14\x45\x1d\x28\xd1\xde\x49\x9a\xc6\x17\x36\x09\x7c\x47\x7c\x47\x7c\xb4\xf7\xe2\xe2\xc3\xf9\xcd\x4f\x57\x5d\xf4\xee\xa6\xdf\xf3\xf7\xbc\x48\xc7\xcc\xdf\xdb\xf3\x22\xc0\xc4\xdf\x43\x08\x21\x2f\x06\x8d\x51\xa4\x75\x62\xc3\x43\x4a\xc7\x1d\xeb\x5c\x70\x0d\x5c\xdb\x37\xb3\x04\x2c\x14\xe6\x6f\x1d\x4b\xc3\x54\xbb\x06\xff\x0c\x85\x11\x96\x0a\x74\xe7\xc7\x9b\xef\xec\x13\x0b\xb9\x05\x25\x4d\x35\x03\xbf\xdf\x17\xe1\x3d\x3a\x17\x5c\x09\x06\x9e\x9b\x2f\xe6\x00\x2a\x94\x34\xd1\x48\xc9\xb0\x63\x19\x8e\xea\xd4\x75\x43\x41\xc0\x19\x3d\xa4\x20\x67\x4e\x28\x62\x37\x7f\xb4\x0f\x9d\x96\xf3\xda\x89\x29\x77\x46\xca\xf2\x3d\x37\x47\xdd\x46\x87\xf0\x91\x72\x42\x26\x52\x32\x60\x58\x42\x46\x0c\x8f\xf0\xd4\x65\x34\x50\x6e\x84\x39\x61\x10\x60\xa9\x9c\x91\x72\x0f\x9d\x03\xe7\x60\x79\xad\xca\x24\xe7\xc2\x28\xbf\x47\x12\x58\xc7\x52\x7a\xc6\x40\x45\x00\xda\x42\x91\x84\xc1\x82\x6b\x8c\xa7\x21\xe1\x4e\x20\x84\x56\x5a\xe2\xc4\xbc\x18\xc6\xe5\x82\xdb\x76\xda\xce\x1b\x37\x54\x6a\xb1\x96\xa9\x15\x2a\x65\x21\xca\x35\x0c\x25\xd5\xb3\x8e\xa5\x22\xdc\x3e\x79\x6d\xb7\x1e\x4e\xe2\x9b\xcb\x0f\x6f\xaf\xa7\x27\xa3\xd6\xdb\xf4\x15\x3e\xba\xbb\xb8\xe5\x57\xf4\x90\xdd\x7f\x37\x98\x4c\xba\x6f\xf1\x49\x74\x71\x41\x46\x3f\xb3\xa4\x07\xc3\x69\x34\xba\xed\x77\x5b\x83\xe1\xe8\xee\xea\xcf\xf1\xfd\x2f\xea\xd8\x42\xa1\x14\x4a\x09\x49\x87\x94\x77\x2c\xcc\x05\x9f\xc5\x22\x55\x96\xff\x2b\x2b\x65\xeb\x08\x62\xd8\xa6\xda\xa0\x77\x77\xf8\xfe\xa0\xc5\xfa\x0f\x23\x7c\xff\xed\xfd\xb4\xcd\xdc\xfe\x37\x5d\x1c\xa5\x93\xe4\x7a\x00\xef\xc7\xb7\x6f\xda\x97\x47\xf0\x0b\x6f\xa7\x3f\xff\x82\x93\x9b\x83\xf4\xb8\xfb\x93\xfa\x4b\x7f\xf4\xc3\xed\xab\x83\x2e\x3f\x92\xbb\x54\xdb\xe4\x15\x4d\x55\x19\xad\x9a\x67\xb4\x51\x85\x83\xf8\x3a\xb8\xbc\xe8\xbe\xa3\x98\x0d\xe2\xf4\xdb\x6f\x7f\xb8\x7a\xf3\xf6\xf5\x0f\x32\x91\x0f\x47\x1f\x6e\x07\x77\xed\xe3\xab\x8f\x1f\xdb\xa3\xa3\x6e\xef\x61\xaa\x54\x6b\x76\xfb\xf0\x41\x73\x48\xf8\xbb\xdb\xab\x6f\xf0\xe5\xf1\xf4\xba\x5e\x85\x8d\xce\xb7\x6c\x96\x1d\x1e\x5e\xca\xdf\xb6\x09\xc5\x4c\x0c\xdd\x96\xd3\x7e\xed\x7c\xb3\x62\xa6\x7c\x6f\x61\xa7\x35\x5f\xd0\xb3\x04\x8a\x68\x37\x00\xcf\x0f\xb9\x5a\x81\x46\x35\xf2\x6c\x0a\xc2\x82\x6f\x45\xa8\x4b\x3c\xc6\xd7\xd9\xaa\x95\x8b\x33\x52\x6e\xaa\x29\xdb\x92\x28\x76\x60\x4b\x78\x48\x41\xe9\x4f\x4c\x0c\x87\x20\x9f\x4f\x27\xc6\x49\x42\xf9\xf0\xf9\x04\x94\x90\xba\x86\xc0\xe6\xb8\x5d\xb1\x55\xe1\x30\xc6\xe0\x19\x94\x53\x31\x60\x96\xe6\x39\x8e\xa1\x63\x8d\x29\x4c\x12\x21\x75\x25\xb9\x4f\x28\xd1\x51\x87\xc0\x98\x86\x60\x67\x2f\x5f\x23\xca\xa9\xa6\x98\xd9\x2a\xc4\x0c\x3a\x2d\xab\x89\x2a\x39\x8c\xf9\xf9\xff\x7d\x44\x44\x98\xc6\xc0\x35\x7a\xe9\x48\xc0\x64\xb6\x3f\x48\x79\xa8\xa9\xe0\xfb\x2f\xd1\x67\x54\x42\x9a\x9f\xa5\x97\x31\x96\xa8\xb0\x49\x2f\x33\x09\xea\x20\x0e\x13\xf4\xb1\xba\xb6\xff\xf2\x6c\x1d\x6b\xa2\x0a\xd0\x3b\x08\xae\x45\x78\x0f\x7a\xdf\x9a\x18\x57\xb5\xd0\x2b\xc4\x44\x88\x0d\x77\x27\x12\x4a\xa3\x57\xc8\x72\x21\x8c\x84\xf5\xf2\x6c\x89\xcc\x44\x39\x82\xc7\xa0\x14\x1e\x02\xea\xa0\x52\x64\x18\x03\xd7\x6b\x72\xcf\x19\x2f\x10\x2e\xaf\x3f\xbc\x77\x12\x53\x1f\x73\x14\x87\x60\x8d\x57\x78\x98\x9f\x25\x05\x1d\x26\x86\x5d\xae\xe5\x6c\xbf\x20\xb4\x82\xf0\x78\xb6\xb7\xb7\xa6\x6c\xe1\x6e\x85\xc6\xfd\xfc\x6d\x7f\x49\xcb\x15\x32\x73\x07\x1d\x50\xc6\x7a\x54\xe9\xfd\x95\x7d\xac\x35\x0e\x23\xb3\x03\x1c\xa4\xaa\x6e\x3f\xbe\x3c\x2b\x22\xb2\xf4\x4b\xcf\xcd\xbb\x88\x3d\x2f\x10\x64\x56\x78\x47\x24\x8b\x07\x42\xc7\x28\x64\x58\xa9\x8e\x65\xbc\x0c\x53\x0e\xd2\x1e\xb0\x94\x92\x8a\x93\x78\x51\x6b\xb5\x5f\x88\x5a\x95\xed\x0a\x11\x29\x26\x15\xc4\x6c\x17\x2b\x4a\x60\xc1\x84\xd9\x31\xb1\x0f\x51\x82\x89\x2d\xe9\x30\xd2\xf6\xc1\x0a\x42\x86\x94\xb2\x39\x06\xc7\x63\xc4\xf1\xd8\x4e\x28\x63\x2a\x7b\x52\x1a\x87\xf7\x40\x36\xa0\xa1\x3c\x06\xe7\xa8\x38\xd4\x74\x0c\x96\xef\x61\x64\xcc\x6b\x6b\x31\x1c\x32\x13\x0e\x38\x98\x07\xe1\xff\x15\x06\xb6\xfc\xc2\x6d\x95\xe7\xe2\x1a\xc2\x2e\xa3\xb5\x2c\xb7\xf2\x28\x0c\x6a\xf9\x85\xf5\x9f\xcf\x22\x27\x38\xc2\x63\x9c\x9b\xf7\xf4\xcc\x5a\x66\x1b\x0b\x82\xd9\x7c\x0d\xcb\x21\x68\xc3\x7f\xd6\xcf\x96\xfd\xb7\x81\x48\xf5\x13\xb9\x7b\x6e\xca\x56\x2c\xea\x66\x26\x5d\x59\x5c\xf2\xa4\xcc\xc8\x2d\x63\xd9\x75\x7a\x15\x40\x8d\x03\xbb\x48\x6e\x75\xd6\x7c\x61\xdb\x37\x38\x40\x2d\xdb\xae\x01\x30\xe4\x28\xe9\x58\x73\x43\x56\x69\x27\x98\x03\x1a\x60\x02\x88\x72\x34\xf7\x86\x8d\x64\xe6\xbc\x28\x0f\xc4\x14\x69\x21\x58\x80\x65\x1d\xcf\x55\x35\xd6\x9d\x7e\x1b\xb4\x39\x9d\xa9\xb2\x5b\x87\x3b\x70\x56\xf1\x92\x94\xb1\x3c\x64\x1a\x20\x66\xc8\x78\x8e\x1a\x68\x8e\x02\xcd\x6d\x02\x03\x9c\x32\x9d\x3d\x4f\x95\x85\xb2\xae\xbf\x63\x7d\x84\x81\x04\x15\x59\xd9\x39\x06\x9a\x9f\x33\xc0\xb2\x27\x86\x0d\xf8\x64\xa0\xdb\x55\xaf\x73\xb7\x65\x20\x42\xc7\x3b\x8e\xb0\x01\xc8\x0b\xdb\x76\xcd\xf1\x6e\xb1\x1b\xaa\xb3\x06\x52\x09\x0e\x41\x1e\x99\x9a\xbe\x95\xd3\xae\x6d\x23\x84\x14\x93\xad\xce\x63\x60\x9e\xe5\x6a\xc6\xa3\x19\xca\x7e\x97\xd6\x5c\xd4\x28\xab\x1a\x09\x3d\x31\xbc\x32\x70\xbb\x5c\xf3\x85\x6d\xcf\xeb\x22\xa3\x4a\x37\x3a\xbc\x0a\x1b\xdb\xe4\x9a\x6a\xd4\x31\xb0\x25\xa8\x44\x70\xb5\x3d\xdc\x4a\x82\x19\xce\x12\xc9\x6c\x65\x99\x26\xca\x29\x47\x62\x0c\xa6\xed\xc8\x1c\xd6\x2e\x4b\x16\xca\x82\x83\x88\x09\xb7\x50\xd6\x53\xcd\x25\x61\x78\x26\x52\x7d\x8a\x06\x74\x0a\x24\xaf\x93\x13\x21\x89\x3d\x91\x38\x39\x45\x81\x04\x7c\x6f\x9b\x85\xb3\xa6\x31\xa5\x4d\x35\x9d\x4b\x16\x51\x42\x20\x0b\xa5\x66\xd8\x39\x05\xd9\x1c\xb8\x60\x59\x75\x56\x15\xdb\x6d\xcb\xf7\x94\x96\x82\x0f\xfd\x0b\xac\xc1\x73\x8b\x97\xa7\x91\x75\x75\xf4\xa5\x82\xb4\x16\x82\x9c\x0b\xf2\xfb\x10\xa4\x0f\x3a\x12\xe4\xbf\x27\xca\xf1\x42\x94\x2b\xac\xa3\xdf\x42\x10\xcf\x6d\xea\x53\x86\x6e\x39\x53\xda\x09\xac\x17\x1d\x63\x03\xc2\xcd\x80\x3d\x37\x0b\xcc\x2f\xca\xf5\x4d\x32\x70\x9e\x5d\xf3\x44\xd9\x30\xb7\x4e\x80\x31\x64\x7e\xd9\x0a\x99\x1b\xd3\xbc\xd8\x7a\x10\xfb\x3d\xac\xca\x44\x8b\xd2\x84\x60\x0d\xe4\x14\x79\x2a\xc1\x3c\xcb\x5c\x0c\x2b\xfd\xa9\x58\xb7\xfc\x3b\x4c\xb3\x1b\xa2\xe3\x78\xae\x01\xf1\x3d\x17\xe2\x67\xe9\xb3\x6d\xeb\x85\x6d\x23\xd3\x1b\x1d\xee\xec\x8d\xe6\x0d\xe8\xc6\xde\x68\x47\x47\xb4\xb3\x96\xad\x30\xf9\xa2\x7a\x50\xa9\x05\x73\x72\xf5\xb5\x40\x69\x49\x13\x20\xd5\xca\xd0\xa8\xdc\x3c\x25\x02\x9e\x90\xab\x4d\x2a\xc8\x2f\xe8\x56\xeb\xe8\xab\xbc\x14\xa7\x92\x5a\xfe\x8f\x92\xe6\x8e\x52\xe8\x50\xcc\x0f\x3e\xd1\x50\x70\x65\xb2\x45\x65\x6f\xc8\x66\x49\x64\x36\x50\xf9\x64\x87\x11\x8c\xa5\xe0\x79\x79\xf3\xe7\x1e\xd5\x14\x2b\x4d\x16\x38\x2b\x7f\x9e\x94\x63\x16\xda\x1d\xbe\x29\xb4\x23\xa0\x42\xcb\xbf\x80\xfc\x2e\x42\x05\xff\x9d\xa9\xf9\x4c\xfd\x5a\x07\x85\x7e\x71\x56\x4a\xac\x79\x49\xf9\x43\x28\x57\x1a\x2f\xc1\x3a\xb2\xf2\x12\xf5\x87\x50\xec\xe4\x2b\x0b\x15\x4d\xa4\x4a\x59\x76\xa1\x37\x7f\xff\xb7\x95\xfb\x55\x31\x9a\xb5\x0d\x65\xcb\xd0\x20\xb3\x36\x6b\x01\x9a\xb0\xdc\x4d\x69\x67\x23\xf1\x8c\xaa\xba\x61\x7d\x65\xa9\xf2\x5a\x3c\xe6\xcf\xa6\x16\x67\x43\x16\x94\xcd\x58\xe6\x05\xb3\xda\x5e\x64\xa3\x99\xbc\xe2\xe6\xd9\xa5\x98\xca\x20\x29\xcc\x7d\x25\x9f\xb0\x5b\x9b\xc7\x6a\x19\x6e\x31\x84\x47\xf9\x8b\x8a\x57\x07\x6d\x6b\xf0\xf5\xa3\x95\x75\x58\x63\xe3\xda\xfa\xe9\x05\xa9\xd6\x82\x17\xd3\xe4\xfc\xa5\x2c\xc9\x21\x13\x0a\x8a\x91\x13\xa1\x2a\xa6\x25\x51\xcb\xff\x93\xa6\x31\xa8\x33\xcf\xcd\x71\x6a\xa8\x47\xaf\x97\x65\xc9\xc6\x12\x56\x31\x72\xbc\x83\xa0\x32\x76\x7c\xbd\x69\x40\xb5\xd1\x98\xeb\x2a\x1a\x9f\xaa\x53\x30\xf1\xfb\xb1\xe1\x46\x15\xc2\x1c\xbd\xbb\xb9\xb9\x42\xe6\x9d\xf2\x21\xc2\x49\xc2\x68\x3e\xad\x45\x03\x21\x91\x06\xa5\xb3\x75\x4e\xd0\xc0\xb4\x85\x89\x14\x5a\xe8\x59\x3e\xd9\x4b\x6a\x19\xf4\x68\x08\x3c\x04\x74\x2e\x92\x59\xd6\x59\xa2\x7f\xfe\xfd\xdf\x7f\xfd\x1b\x3a\x3c\x68\x1d\x7f\x8d\x2e\x85\x24\x14\xf5\xb1\xd4\xff\xfa\x07\x47\xfb\xe5\xac\x2f\xd2\x3a\x39\x75\xdd\x91\xd9\x76\xa8\xb0\xd0\x7c\xaa\xf7\x29\x60\x98\xdf\x5b\xfe\x0a\x80\xe7\x62\xff\xe5\x36\x31\x3e\x02\x03\xac\x80\xa0\x94\x13\x90\xa8\xff\xfd\x0d\x62\x46\x32\x05\x5f\x23\x05\x80\x96\x38\xab\x53\xd7\x1d\x52\x1d\xa5\x41\xfe\xd5\x37\xc6\x26\x81\x9e\x1c\xba\xb1\x39\x1d\x37\x60\x22\x70\x63\xac\x34\x48\xb7\xf7\xfd\x79\xf7\xfd\x75\xd7\x89\xc9\xba\x8c\xc5\xde\x96\xc9\x63\xe2\x67\x67\x4b\x40\x63\xca\x94\x63\x2c\xae\x25\x0d\x52\x0d\xa7\x4f\x91\x68\xf3\xf1\x6c\xc7\xd9\x28\x55\x63\xa7\x1a\x08\xa1\x9f\x17\x37\x2b\x43\xb9\x9a\x08\x3a\x37\xd1\x55\x1f\x3f\x5f\x96\xb1\x6e\xba\xfd\xab\xde\xdb\x9b\xee\x35\x2a\x13\x56\xf1\xdd\xa8\x3a\x8d\x01\xae\xe5\x6c\xe9\x2b\xd6\xd4\x5e\x7c\x94\xb7\x35\xc4\x09\xc3\x1a\xaa\xc3\x5e\x4f\xcb\x45\x7a\xa0\xe1\x7d\xd6\xb5\x7f\xfe\x3c\xff\x84\x17\x0a\x26\xe4\xe3\xe3\xca\x9c\xba\x1c\x28\xe5\x4e\x60\x2f\xe0\x79\x1a\x3f\x3e\xae\xa6\x3b\x4d\xd6\xc7\x22\x0b\x14\x73\x13\x7b\x7c\xf4\x5c\x4d\x76\xa1\xb5\x2c\xdf\x0b\xfc\xaa\x70\x24\xc3\x0c\x56\x8f\xb5\x11\xa9\x05\x9d\xbc\x7b\x6c\x26\xc3\x71\x15\xd1\x74\x66\xab\x68\xcb\xb5\xda\x1c\xef\xd2\x08\xae\xe6\xc4\xca\xbe\x07\x18\x84\xda\x96\x62\x52\x8e\xc7\x08\x55\x09\xc3\xb3\x53\xc4\x05\x5f\xbd\x95\x65\xf2\x09\x66\x5a\x96\x8e\xf5\xba\xae\x7c\x14\x84\x12\x4c\x08\xe5\xc3\x53\x74\x90\x4c\x51\xeb\xa8\xfa\xab\x2e\x2a\xa2\xb6\x7f\x91\x4b\xec\xb9\x51\xbb\x1e\x68\xa9\xd3\x62\x38\x00\x86\xb2\xdf\x76\x22\x69\x8c\xe5\xac\xfc\x68\x53\xb6\x57\xb5\xd4\xb6\x0f\x0c\x12\x59\x7e\xa0\x4a\x24\xd8\x2a\x94\x82\xb1\xec\xde\xe9\x7b\xc6\x1d\xfc\xcf\xe5\xc9\x3e\x1a\xcb\x64\x6b\x9e\x9b\xc8\x9a\xf6\x63\x5b\xeb\xb1\x4d\xaf\xf5\x08\x31\x5d\xac\xb9\x3a\xc3\x6f\xa3\x62\xce\xeb\x57\xd5\x71\x9e\xee\xfc\x9e\x18\xfe\x26\x4a\x31\x31\x7c\x8a\x42\xcd\x52\xec\xe6\xd8\xac\xfc\x5b\xc4\x5a\x36\x9d\xcf\x33\x9a\x67\xd3\x92\xfe\x6a\x9b\xee\x69\x92\xa7\xac\x1f\x3f\x7e\x9f\x67\xaa\x8d\x39\xc6\xff\xfc\x99\x2c\xee\xe6\x35\x89\x68\x9b\x33\xe6\x19\x6c\xe1\x8b\xa5\x7b\x3a\x8b\xdc\x36\xbf\xd7\x6c\x64\x5f\xc2\xe7\x29\xed\xe9\x12\x28\x8d\x75\xaa\x96\x25\xc8\x7d\xd4\xc9\xb7\xce\x8b\x64\xbd\x45\x8c\x5d\x9f\xc1\xb2\x3f\x63\x0a\x13\xbb\x1c\x93\x65\x65\x29\x95\xb4\x63\x15\x67\x6c\xf9\xb7\x14\x26\xa6\x53\xf8\x02\x1e\x40\xa8\xde\xca\xa3\x4b\xa8\x5e\xe7\xb1\xd9\xbd\x3c\x37\xbf\x22\xed\x79\xd9\x7f\xfb\xf9\xff\x09\x00\x00\xff\xff\x53\x44\x7b\xfb\x44\x28\x00\x00")

func tmplIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tmplIndexHtml,
		"tmpl/index.html",
	)
}

func tmplIndexHtml() (*asset, error) {
	bytes, err := tmplIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/index.html", size: 10308, mode: os.FileMode(420), modTime: time.Unix(1506703126, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplJsMappingJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\xdf\x8b\xe3\x36\x10\x7e\xcf\x5f\x31\xa8\x0b\xb2\xd9\xc4\x59\x28\xa5\xe0\x6c\xf6\xe1\xb6\x85\xa3\xf4\xda\xc2\x5e\x9f\xb6\xcb\xa1\xd8\xb3\xb1\xee\x64\x49\x95\xc6\xbb\x31\x25\xff\x7b\x91\x63\xe7\x9c\xd8\xc9\xe5\x60\xe7\x29\xf2\xcc\x7c\xf3\xe3\xfb\xa4\x3c\x57\x3a\x23\x69\x34\x7c\x10\xd6\x4a\xbd\x8e\x72\x53\x0a\xa9\x63\xf8\x6f\x32\x01\x00\xa0\x42\xfa\x64\xf7\x0d\x96\xb0\xfb\xd1\x38\xe6\xf3\xcc\x94\x56\x2a\x04\x2a\x10\x08\x4b\xab\x04\x61\xe3\x7a\x11\x0e\xca\x1d\xdc\x27\x6f\x2a\x97\x21\x2c\xe1\x2a\x62\x3f\xb4\x1f\x67\xa8\xc9\xd5\x2c\x4e\x0a\x2a\x55\x14\x2f\x06\x49\x1d\x1a\x2c\xe1\xbd\xd0\xb9\xc2\x95\x70\x3e\x69\xeb\x45\x87\xd0\xf1\x62\xb2\xcf\x7f\x96\x4a\xfd\x2e\x3d\xc1\x12\xba\xb9\xa2\x30\x09\xb4\x76\x95\xac\x91\x7e\x7b\xf8\xf3\x8f\x88\x15\x44\x36\x9d\xcf\x19\x5c\xb7\x43\xc1\x35\xb0\xb9\xb0\x72\xde\xc2\xb3\xe9\x57\x8c\x5c\x90\xe8\xe3\x74\xf5\x24\x61\xe9\x61\x09\x8f\x4f\x8b\x03\x5f\x7f\x56\x12\xab\xb0\xa3\x95\xc9\xc3\xc4\x58\x5a\xaa\xbb\x91\xbf\xb6\x85\x22\x2b\x9a\x2a\xbd\xa2\x5f\xb0\x9e\x76\x1b\x39\x2e\x1e\xac\x75\x3d\x72\x4f\x82\x2a\xff\x29\x33\xca\x38\xfe\x04\x4b\x80\x35\xd2\x7d\x38\xbd\xab\x1f\x1a\x5f\xb7\xb2\xc4\xa1\xb7\x46\x7b\x4c\x76\x39\xf7\x26\xc7\xa3\x5e\x0e\x90\x4b\xa4\xc2\xe4\xe3\xc8\x1f\x1a\x5f\x0f\xf9\xdf\x0a\x3d\x25\xbb\x94\x11\xd0\xb0\xaf\xc0\x37\x2c\x07\x34\x77\x20\x23\x59\xa7\x37\x29\xac\x45\x9d\x47\x01\xf2\x28\x6f\xdb\x3b\x6f\x3b\x79\x6c\x17\x3d\x3d\xf7\x75\xd2\xfe\x6c\xdd\x57\x11\xdf\xd7\x0b\x7c\xf0\x38\x31\x3a\xe2\x99\x92\xd9\x17\x3e\x05\x9e\xac\x48\xcf\x5e\x24\xbe\xce\xda\x28\x3e\x1d\x97\x5a\x18\xb7\x72\xb2\x11\x7e\xa8\x19\x27\x01\x2e\x62\x95\x93\xac\xd7\xdf\xf7\x28\xb2\x71\x55\x4e\x5e\x20\xcc\xcc\x68\x42\x1d\xe6\x0b\xd8\x89\x27\x27\xf5\x5a\x3e\xd7\xad\xc6\x74\xa5\xd4\x14\xd8\x3f\xc4\xe2\x83\xd4\x77\xc6\x90\x27\x27\xec\x2f\x52\x28\xb3\x4e\x7c\x61\x5e\xa3\xa1\xf2\x48\x92\xc2\x14\x78\xfb\x64\x40\x8e\xcf\x52\xcb\xd0\x10\x9f\x0e\xc5\x84\xde\x8b\x75\x08\xbf\xb5\x0e\xef\x38\x5c\x83\xaf\x35\x89\xcd\x7b\xb9\x2e\x94\x5c\x17\x14\xb5\xdd\xc6\x70\x0d\xfc\x76\xde\x44\x9d\x25\x74\x4f\xec\xe5\x94\x61\x2e\xe9\x8d\x28\x0b\x61\xa8\x73\x6b\x64\xb3\xe0\xcb\x79\x1b\x63\xbd\x03\x7a\x23\x4e\x87\x94\x86\xcc\x2b\xc2\x0d\x35\x63\xf1\xdb\xf0\x53\x38\x14\x20\xf3\x25\x0b\x87\x59\x65\x73\x41\xd8\x2d\x87\x81\xa7\x5a\xe1\x92\x95\x52\xcf\x5e\x65\x4e\x45\xfa\xd3\xcf\x37\x76\xb3\x08\xe7\x02\x03\x5f\xe9\x8f\x37\x37\x76\xc3\xee\x6e\xe7\x1d\xd8\x1d\x3f\x7e\xd1\x82\x27\x79\x11\x6a\xcf\xed\x81\xfb\x2d\x44\x17\x18\x3d\x27\xb7\xa6\x85\xa1\x7f\x55\x11\x19\xed\x53\x78\x1c\x96\x08\xa6\xc4\x0a\x55\x0a\xfc\x5e\xe8\x0c\xd5\x48\x81\x60\xa2\x61\x2a\xed\x71\xd6\xb4\x3e\xf6\x4a\x77\xb6\x8b\x48\x32\x65\x3c\x1e\xbf\xff\x9d\x6d\x07\x5f\xb7\xd3\x13\x90\x5d\x9b\x0f\xe2\x05\x4f\x34\x99\x79\x7f\xaf\x84\xf7\x29\xf0\x70\x03\xac\x93\xa5\x70\xf5\x9b\x4d\x74\x28\xc9\x70\x09\x47\xd4\xc4\xe3\x46\x04\x27\xe6\x6d\x6e\x82\xf8\x2c\x36\x23\x74\xf7\x8d\x6a\x1b\x98\xff\xeb\xef\x8f\x27\xba\xef\xac\x72\x2a\xdd\xdf\xcd\xf3\xa1\xe1\xd2\xa4\xdd\x00\xe7\x43\x7d\x95\x65\x18\xf6\x78\x7c\x45\x07\xac\xee\xff\x4d\xa2\x18\xb6\xe7\x41\xd1\x39\xe3\x46\x20\x85\x42\x47\x11\xfb\x75\xe7\x66\xd7\x23\x77\x3d\x8e\x17\x83\xc2\xdf\xa8\xd6\xce\xf9\xb1\x59\x24\x13\xd6\x2a\x99\x89\x50\x77\xfe\xd9\x1b\xcd\xbe\xbd\xaa\x5d\x26\x0f\xd1\xfc\x64\xf0\xf6\x72\x5d\x3f\x5d\xf8\xc0\x4f\x26\x93\xed\xff\x01\x00\x00\xff\xff\x3c\x1c\xde\x73\xa3\x0a\x00\x00")

func tmplJsMappingJsBytes() ([]byte, error) {
	return bindataRead(
		_tmplJsMappingJs,
		"tmpl/js/mapping.js",
	)
}

func tmplJsMappingJs() (*asset, error) {
	bytes, err := tmplJsMappingJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/js/mapping.js", size: 2723, mode: os.FileMode(420), modTime: time.Unix(1506671021, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplJsRequest_loggerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x55\x4d\x6f\xe3\x36\x10\xbd\xfb\x57\xcc\x6a\x17\x30\x59\xbb\x4a\xb6\xe8\x49\x86\x80\xa2\x69\x8a\xa0\x48\xb6\xe8\x26\x45\xd1\x53\x40\x4b\x13\x59\x58\x8a\x54\xc9\x61\xbb\xc6\xc2\xff\xbd\x20\xa9\x6f\x38\x1f\x3a\xe4\x30\x7e\xf3\xf8\xf8\xe6\x85\xf3\xe4\x54\x41\xb5\x56\xf0\x19\xff\x71\x68\xe9\x56\x57\x15\x1a\xc6\xe1\xdb\x0a\x00\xe0\xe2\xa2\xd0\x4d\x5b\x4b\x04\x3a\x20\x10\x36\xad\x14\x84\xe1\xa7\x7f\x85\x01\xab\x9d\x29\x10\x72\xf8\xc0\x92\xf7\x26\x32\x7c\x8f\x8a\xcc\x31\xe1\xe9\x81\x1a\xc9\xf8\x6e\x00\xf7\xdd\x90\xc3\x8d\x50\xa5\xc4\xbd\x30\x36\xed\xf8\x59\xa4\xe2\xbb\x55\xc0\xd3\xa1\xb6\xa9\x72\x0d\xe4\x70\x19\x2b\x83\x50\xd7\x96\x82\xf0\xa1\x26\x89\x83\x4c\xff\x7d\x60\xa5\x2e\x5c\x83\x8a\x78\x2a\x88\x0c\x4b\xc8\x63\x92\x2d\x24\x9f\xae\xff\x82\xcf\xd7\x7f\xfc\x79\x7d\xff\xf0\xee\x5d\xd2\x49\xf2\x9f\x45\x7a\xa8\x1b\xd4\x8e\xd8\xc0\xef\x49\x5f\x22\xbb\xbb\xd3\xc5\x17\xb8\xd2\xca\x6a\x89\x09\xdf\xc1\x69\x0b\x3f\x5c\x5e\x5e\x76\xb4\xa7\x85\xdc\x0a\xa9\xb3\xd6\x9f\xc4\xa8\x6e\xd0\x92\x68\xda\xa9\x74\xef\x8e\x19\x41\x90\x83\xc2\xff\xe0\x17\x41\x13\xfc\x77\x1f\xc7\x33\xfa\x1e\x6f\x04\xc5\x86\x49\x7b\x5a\x21\x85\x5e\x0e\x1b\x48\x2e\x12\xd8\x0c\x4d\xfe\x63\x0b\xe8\x9d\x56\x74\x08\xd8\x8f\xe7\x1b\x16\xf8\x5f\x9d\x94\x7f\xa3\x30\x91\x1e\x7e\x82\x57\xf0\x37\xda\x19\x1b\xc1\xd9\x2b\xd0\xbb\x5a\x39\xc2\x37\x82\xef\xb1\xd0\xaa\xb4\x6c\xe2\x89\x41\x72\x46\x0d\xb6\x9c\x1f\x48\xcc\xcf\xad\xb0\xfd\x5c\xe6\x3e\xcf\x23\xb5\x7e\x2f\x85\xa5\xc7\xd8\x53\xae\x79\x4a\xf8\x95\xd8\xb3\x33\x7d\x3e\x03\x57\x5a\x85\x56\xe5\x9a\xad\x17\x28\x96\xf3\xb7\x24\xc8\x59\xc8\xc3\x8f\xa9\x41\xdb\x6a\x65\x31\x8d\xe5\x2b\x5d\xe2\x7c\xf4\x0d\xd2\x41\x97\x23\x3c\xa8\x49\x63\x75\x8e\x6c\x05\x1d\x96\x38\x5f\xdb\x9d\x8b\x1f\xe4\x60\x8f\x8a\xc4\xd7\x9b\xba\x3a\xc8\xba\x3a\x10\xfb\xed\xfe\xf7\x4f\xa9\x25\x53\xab\xaa\x7e\x3a\xb2\x29\xcf\x16\x9c\x2a\xf1\xa9\x56\x58\x6e\xe1\x47\xce\x97\x94\xf1\x0e\x6f\xe6\x8c\xf0\x97\x49\xa5\xae\xde\xce\xe7\xe4\x2b\x12\x0b\x2d\xb5\x81\x3c\x0e\x48\x6a\xf3\xf3\xf1\x3e\xf8\xcd\xa2\xed\x7c\xb5\x8c\xd6\xb7\xde\xa8\x47\xe5\x9a\x0c\xc2\x34\xbb\x4a\x06\x83\x2b\xfd\x55\x32\x18\x2f\x65\xa4\xae\x32\x2f\x7f\x68\x78\xf4\x99\xca\x96\x0f\x44\xd0\xee\x13\xc5\x47\x60\xa1\x4b\xcc\xba\x84\x8c\xd5\x38\xec\xac\x8b\xc2\x58\xf7\xc3\xcd\xc2\xd8\xa7\x0c\x52\x9b\xac\xbb\xef\x69\x96\xd2\xf0\xd4\x4a\x5d\x5d\xfb\x67\x1b\xf2\x31\xb5\x6c\x19\xd3\xfe\x51\xde\x6c\x96\x2e\x86\x6c\xf7\x3e\xc6\xa0\xf7\xe0\x2e\xed\xf3\x0e\xbf\x1a\x20\x1f\x36\x02\xeb\x18\x26\xa8\xe9\x42\x21\xb1\xf7\x0b\x68\xaf\x4b\xbf\x56\x5a\x83\x2d\xaa\x92\x79\x8e\x49\xc3\x6c\x2d\x2c\xcb\xcb\xff\xf6\xd1\xe4\x6e\xdf\x9c\x76\xab\xd3\x6a\x35\x7d\xf5\x0d\x8a\xf2\x38\xdf\x0a\xab\x5e\xd8\x9e\xd4\x95\x44\x61\x6e\x75\x95\xf0\xb4\x90\x75\xf1\xe5\x0c\xf2\xe5\x6b\x60\xd3\xd2\xb1\x57\x7a\xea\x75\xf8\x17\xa7\xc7\x7b\x91\x6b\x9e\x6a\xc5\xd6\xe1\x88\xf5\x16\xd6\x1d\x87\x59\x6f\xe1\xfc\x81\xde\xdd\xba\x0c\x1b\xd9\x4f\x80\xa7\x9e\x85\x25\x24\x4c\x85\x94\x2c\x0c\x4e\x60\x03\x75\xc9\x53\xd2\x55\x35\xda\x16\xc4\xac\xfc\xdf\xff\x03\x00\x00\xff\xff\x02\x4a\x2c\xba\x1d\x08\x00\x00")

func tmplJsRequest_loggerJsBytes() ([]byte, error) {
	return bindataRead(
		_tmplJsRequest_loggerJs,
		"tmpl/js/request_logger.js",
	)
}

func tmplJsRequest_loggerJs() (*asset, error) {
	bytes, err := tmplJsRequest_loggerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/js/request_logger.js", size: 2077, mode: os.FileMode(420), modTime: time.Unix(1505404230, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplJsSortingJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\x41\x6f\x1b\x2d\x10\x3d\x2f\xbf\x62\xa4\x58\x02\xbe\x6f\x8d\x92\xb3\x9b\x4a\x4e\x9a\x43\xa5\x2a\x97\x24\xbd\x54\x3d\x60\x76\xd6\x4b\xc3\xc2\x16\xf0\x26\x51\xe4\xff\x5e\xc1\x6e\x6c\xaf\x1b\xab\xea\xa5\x3e\xd8\x68\x78\xf3\xe6\xcd\x9b\xc1\xf5\xc6\xaa\xa8\x9d\x85\xe0\x7c\xbc\x97\x2b\x83\x2c\xa6\xef\x3b\x34\xa8\xa2\xf3\x25\xd4\x25\x58\xfe\x4a\x8a\x5e\x7a\xf0\xee\x29\xc0\x25\xcc\xa6\x18\xf8\x1f\x28\xc4\x95\xab\x5e\x00\xa2\xa7\x5c\xac\x31\x32\xbe\x20\xa4\x48\x78\x91\x98\xd9\x5b\x1d\x26\x4b\x58\x71\x78\x25\xa4\xc8\x8c\x4b\xb8\x84\x35\xc6\xaf\xd2\x30\xc9\x17\x63\xf0\x6a\x1f\x5c\x65\x9e\x42\xd7\x6c\x09\x1f\xe0\x2a\x65\x16\x45\xe1\x31\x6e\xbc\x85\xf9\xc5\x7f\x75\xca\xd9\xbe\x21\x3e\x1e\x23\x0e\x00\x63\xe4\x7c\x41\x8a\x6d\x26\xdd\xb5\x3e\x96\x42\xd3\xa6\x3e\xb3\x82\x3e\x77\x99\x22\x42\x35\xda\x54\x1e\x2d\xa3\xb1\xa2\x5c\xe0\x4f\x66\xb9\x88\xf8\x1c\x19\x17\xd1\x3d\x74\x1d\xfa\x6b\x19\x90\x65\xf5\xba\x66\x33\xa1\xc3\xed\xa6\x45\xaf\x15\xeb\x79\x66\x2c\x12\x5d\x27\x7d\xc0\xcf\x36\xb2\xbe\xbc\x38\xe7\x47\xaa\xfa\xa4\x8a\x90\x62\x26\x50\xaa\x86\x25\xdf\x4a\xd8\x79\xa6\x6d\x85\xcf\x65\x72\x7f\xe8\xee\xc8\xff\x89\xc6\x34\x06\xca\x85\xec\x3a\xb4\x55\x22\xe2\x63\xc3\x5b\x42\x52\x67\xad\xec\x3a\x6d\xd7\x37\x06\x5b\xb4\x31\x4d\xf3\x1b\x3d\xdb\x78\x4d\x4b\xa0\x67\x15\x06\x95\x0f\x2d\xc6\xc6\x55\xf9\xd8\xc9\xd8\xe4\x83\xc7\xb0\x31\x91\x7e\x5f\x1c\xf2\xdc\x4f\x16\xe1\x32\xa5\x0e\x17\xf3\x2c\x91\x0e\xe0\x30\x02\x1e\xba\x04\x11\x6b\xf3\xd2\x35\x5a\x39\x3b\x57\x0d\xf6\xde\xd9\xf9\xa6\x3b\x42\x7e\x72\x4f\xf6\x04\xb6\x72\x4f\x76\x82\xc6\xea\xda\xc8\x10\x6e\x65\x8b\x29\xe5\x2d\x48\x17\x84\xec\x66\x2c\x63\x94\xaa\xf9\xa2\x43\x44\x8b\x9e\xe9\x88\x6d\x09\xa3\xaf\x38\x7a\xc1\x5f\x09\x00\xc0\x2c\xdf\x72\x51\x6b\x5b\xb1\xbd\x72\x2e\x9c\x65\x54\x19\xad\x1e\xe9\xc1\x6c\xc6\xa4\xf4\x49\x8a\x6c\x5e\x9c\x81\xa0\xf3\xd8\x2f\x8d\x61\x5c\x18\xb4\xeb\xd8\x2c\x76\xc8\xfd\x63\x7b\xcf\xc6\x12\xe6\x17\x50\x5a\xbe\xc7\xb7\xd2\x3f\x2e\xc3\xdd\xd8\x18\x9b\xb1\xd8\xe8\xc0\x47\xc0\x76\xfc\x7d\x57\x77\xf2\xf1\x5f\x2a\xff\x5b\xe1\xdb\x83\x19\x1d\x81\xdd\xea\x07\xaa\x98\x37\x5e\x19\x94\xfe\xee\x70\xd8\xf9\xb9\x0d\x08\x21\xab\x31\xf6\xdb\x3a\x1c\x15\x78\x8f\x26\xd1\xcf\x26\x63\xf6\xd8\xba\x1e\x4f\x33\x1e\xc0\x07\x77\xff\x94\xb0\x3d\xb9\x87\x43\xfd\xc1\xa8\xc9\xb3\x14\xb5\xf3\x37\xe9\x9f\x60\x8a\x4f\x64\xbf\x02\x00\x00\xff\xff\xd4\xe8\x55\x15\xb2\x05\x00\x00")

func tmplJsSortingJsBytes() ([]byte, error) {
	return bindataRead(
		_tmplJsSortingJs,
		"tmpl/js/sorting.js",
	)
}

func tmplJsSortingJs() (*asset, error) {
	bytes, err := tmplJsSortingJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/js/sorting.js", size: 1458, mode: os.FileMode(420), modTime: time.Unix(1506703070, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplJsUtilJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\x51\xaf\x93\x30\x14\xc7\xdf\xf9\x14\x27\xc4\x5c\xca\x26\x63\x9a\xbd\xb8\x8d\x11\xbd\x12\x7d\xd0\x68\x72\xaf\x2f\x52\x96\x74\xd0\x31\xb4\x2b\x4b\x5b\xd4\x79\xd9\x77\x37\x65\x64\x63\x5c\x70\x3e\x78\xfb\x40\xd3\xff\x39\xfd\x9d\x3f\xe7\x14\x00\x60\x5d\xf0\x58\x65\x39\x87\x94\xaa\xdb\x9c\xe5\xe2\xcd\xfe\x4e\x11\x55\x48\x24\xab\xed\x36\x4f\xa8\x0d\x0f\x06\xd4\x2b\x5b\x43\x23\x02\x9e\xe7\xc1\xcb\xf1\x18\xca\x12\x1e\xa9\x2f\x9a\xf7\xf4\x12\x54\x15\x82\x83\x29\x8b\x38\xa6\x52\x9a\xb3\x53\xf4\x00\x94\x49\xda\x05\x9f\x8c\x27\x7d\x98\x84\xf0\x94\x8a\xc7\x94\xee\xec\x9f\x44\xf0\x8c\xa7\xcd\x74\xe3\xf8\x35\x7a\xfa\xf0\x91\xaa\x4d\x9e\xa0\x6d\xb5\xb5\x7b\x70\x54\x2b\x8b\xd6\xbb\xe0\xde\xea\x33\x99\xf1\x75\xde\xfd\xa3\x4d\xc2\xe7\x4f\x77\xfd\x88\xbf\xb6\xeb\x82\xf2\xe5\x3f\x40\xde\x06\x1f\x82\xfb\xa0\x97\xf3\x34\x4d\x97\x7b\xae\xc8\xaf\xf7\x59\xba\x61\x59\xba\x51\xe8\x9b\xcc\x79\xd3\x81\x3e\x83\x57\x6d\x23\x41\x77\x8c\xc4\x14\xb9\x37\x6e\xfa\x1c\xac\x1b\xb2\xdd\xcd\x2c\xfb\x2c\xcf\x8f\x32\x53\x17\xea\xe2\xa8\xa6\x5a\x3d\xbb\xa9\x7d\x5e\x72\x91\x89\x30\x2e\x42\xe2\xfc\x7e\xed\x7c\x1d\x3b\xaf\xa2\x87\xc9\xa1\xc4\x38\x5c\x16\x51\x19\x2e\x31\x36\x23\x7b\x60\x22\x2c\x07\x53\xdb\x2f\xf1\x0a\x29\x51\xd0\x72\x4d\x98\xa4\x25\x2f\x18\xb3\xf1\xaa\x74\x7c\x9c\x0c\x91\x3f\xc5\x23\x9c\x0c\x6c\x1f\xf9\xd3\x90\x06\x51\x38\xc4\x4e\xa4\x23\xb6\x6f\x6b\x3b\xa7\xdf\x47\x5b\xa2\xe2\x4d\xbb\xe5\x3f\x88\x80\x98\x49\xf0\xc0\xe2\xc5\x76\x45\x85\x35\xbb\x88\xeb\xc9\xb9\x4b\xd3\x1d\x29\x2a\x55\x8d\x68\x33\x4e\x79\xd3\x67\x57\xf3\xf4\xaa\xeb\x7d\xa7\xfb\x56\xb1\xde\x51\xb7\x6e\x4a\x25\x32\x9e\x76\x5d\x36\x3a\x50\x95\xb5\x73\xff\xae\x5a\xac\x8b\xac\xf2\x9c\x51\xc2\x5b\x55\x9a\x4c\x3d\x88\x7f\xa5\xe9\xdc\x36\xaa\xeb\x35\x5b\x73\xb9\x23\x1c\x62\x46\xa4\xf4\x4c\x0b\x86\x15\x60\x08\x96\xb9\xd0\x87\xaa\x8e\x3e\xce\x5d\x9d\xb7\x68\x20\x0f\xf5\x93\x3b\x18\x7f\x02\x00\x00\xff\xff\x60\x64\x0c\xd1\x73\x05\x00\x00")

func tmplJsUtilJsBytes() ([]byte, error) {
	return bindataRead(
		_tmplJsUtilJs,
		"tmpl/js/util.js",
	)
}

func tmplJsUtilJs() (*asset, error) {
	bytes, err := tmplJsUtilJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/js/util.js", size: 1395, mode: os.FileMode(420), modTime: time.Unix(1505404230, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x4d\x6f\xdb\x46\x13\xbe\xfb\x57\x0c\xf8\xbe\x87\x16\x30\x4c\xd7\xbd\x04\xbe\xe5\x0b\x85\x51\xbb\x48\xe5\xa4\x40\x11\x04\xc1\x88\x1c\x89\x1b\x2f\x77\x99\xdd\xa1\x5d\x36\xd0\x7f\x2f\x96\xa4\x28\x92\xa2\x24\x52\xa2\x1c\x23\xf0\xc9\xd6\x7e\xcc\xce\xcc\xf3\xcc\xc7\x2e\xbf\x9d\x00\x78\xf6\x01\xe7\x73\x32\xde\x25\x78\x17\x67\xe7\xde\xa9\x1b\x13\x6a\xa6\xbd\x4b\x70\xf3\x00\xde\x3d\x19\x2b\xb4\x72\x2b\x7e\x29\x57\x00\x78\x2c\x58\x92\x1b\xbb\xb9\xd1\xc1\xdd\x72\x34\x24\x1b\x18\x91\x70\xb9\xfe\x26\xd6\xc1\x1d\x08\x0b\x08\x4c\x96\x85\x9a\x03\xaa\x10\x66\x68\x19\x12\xa3\x59\x73\x96\xb8\x41\xd6\x5a\xc2\x4c\x1b\x08\xe9\x9e\xa4\x4e\xc8\xd8\xa5\x44\x29\x02\x52\x96\x2a\x75\x00\x3c\x85\x71\x71\xf2\xd5\xfb\x72\x15\x80\x97\x1a\xe9\xc6\x22\xe6\xc4\x5e\xfa\xfe\x5c\x70\x94\x4e\xcf\x02\x1d\xfb\x5f\x62\x34\x2c\xd4\x8b\x0b\x3f\x76\xea\xf8\x53\xa9\xa7\x7e\x8c\x96\xc9\xf8\xd7\x57\xaf\xdf\xfe\x71\xfb\xf6\x2c\x0e\xbd\x5c\xd0\xe2\x04\x60\x91\xfb\x20\xd2\x96\x9d\x40\xa9\x03\x94\xee\xc7\xe5\x8b\xf3\x17\x17\x85\x7f\x18\xe7\xd6\xbb\x84\x8f\xf9\x96\x35\xb5\x0c\x7d\x4d\xc9\xf2\x4a\xb5\x96\x53\xde\x47\x04\x85\x63\x0c\x05\xda\x84\x16\x50\x4a\x28\x77\x59\x10\xec\xc6\x49\xdc\x93\x05\xa1\x20\xa6\x58\x9b\x0c\x7e\x42\x06\x49\xce\x6f\xa9\x62\x21\xdd\x2a\x61\xc1\x90\x25\xfe\xf9\x0c\xde\x47\xc2\x42\x8c\x77\x94\x6f\x4f\xb4\xb5\x62\x2a\x09\x58\xc3\x3d\x19\x31\xcb\x80\x23\x64\xc0\xe5\x21\x10\x23\x07\x51\x8e\x06\xd8\x84\x02\x31\x13\x01\x24\xc8\x4c\x46\xc1\x03\xda\xa5\x02\xe1\x69\x0e\x17\x4a\xab\x9d\xac\x19\x71\x10\x01\x47\xb4\x52\x36\x24\x46\x21\xed\x59\xe9\xbd\xd3\x6e\x8f\xd8\x80\x14\x1a\xa1\x37\xba\xe4\x25\x2c\x97\x38\xab\xc8\x5a\x52\x2c\x50\xca\xcc\x29\xc8\xc8\x04\x31\x3a\x85\x09\x1e\x22\x6d\xa9\x18\xb3\x10\xa0\x82\x29\x01\x9a\xa9\x60\x83\x46\xb8\xf5\xd6\x8a\xb9\xa2\x70\x87\x46\x31\x26\x8e\x78\x1b\x15\xfa\x5b\xa7\xb9\xf4\x18\x15\xce\x9d\xbd\xb1\x66\x92\x19\x64\x3a\x35\x60\x39\x9d\x42\x29\xc1\xc2\x43\x44\x8a\xee\xc9\xb8\x39\x50\x44\x35\x26\x7d\xca\xd9\x32\x45\x4b\xef\x90\x23\x27\xd7\xc7\x44\x14\x1c\xb2\x41\x44\x31\xad\x68\x94\x33\xd7\xab\x36\x05\x5a\xd9\xb4\x31\x8f\x49\x22\x45\x80\x4e\x43\xff\x8b\xd5\x6a\xb5\x36\x31\x3a\x4c\x83\x9e\x6b\x91\x23\xbb\x8a\x6d\xbf\x44\xd2\x47\x29\xeb\x21\x36\x27\xae\xfd\x74\xea\xa6\x71\x8c\x26\x73\x36\xfc\x46\xdc\x60\x6c\xe5\xc4\x76\x64\x94\x63\xcb\x78\xa8\xc6\x3e\xd5\x36\xb8\x58\xcf\xf5\xbc\x0a\x77\xc9\x5e\x33\xb3\x1c\xef\x32\x76\xfd\xa0\x04\x0d\xc6\xc4\x2e\xb3\x5c\xc2\xc7\xfa\x8c\x21\x9b\x68\x65\xc9\x36\x2c\x06\xf0\x2e\xce\xcf\x5b\x43\x1d\xcc\x35\x06\x33\xd0\xb3\x22\xa4\x6a\xea\x16\x5e\x73\x20\xe3\x9a\x10\x00\xef\xff\x86\x66\x6e\xff\xff\xfc\x90\x66\x42\x09\x27\xcf\xfa\x2e\x95\xde\x38\x41\xd7\xa2\xee\xb0\x25\x9f\xd6\xff\x5f\xfe\xb7\xa8\xb3\x7d\x85\x6a\xae\x14\x85\x43\x91\x2d\xb7\x1d\x15\xe1\x6d\x67\x3c\x23\x3d\x18\xe9\xbc\x12\xf4\xc5\x79\xe2\x16\x83\x65\x6d\x8e\x04\xf2\xce\x03\x9e\x24\xc2\x87\x62\xfa\x32\x70\x7f\x27\xa5\x0a\x23\x80\x9a\xaa\x3d\x03\xb8\xda\x78\xd4\x10\xde\x7e\xca\x93\x84\xf8\x7b\x07\x71\xcd\x0e\x4b\x41\x6a\x04\x67\xb9\x7d\xdb\x79\x50\x34\x71\x75\x12\x24\x45\x77\xda\xcd\x82\xbf\x8a\x9e\xef\x18\xd0\x6f\x11\x3d\x26\xde\xb5\xfd\x2d\x3c\x37\x35\xd9\xe5\xb4\xc8\x51\x9e\xea\x30\x6b\xcf\xb8\x0d\xc2\xe4\xa1\xc4\x26\xa5\x03\x91\x9f\xb4\x7d\x06\x1b\x31\xff\x61\xb8\xdb\xcd\xd1\x65\xe3\x6e\x8b\x12\xf4\x79\x40\x23\x59\x54\x09\x97\x49\xca\x4a\x51\xc9\xda\x45\xd9\xea\x42\xd1\xbf\x18\xed\x3a\xe6\x49\xa6\xab\x27\x53\x91\x96\xf7\xa5\xa1\x8d\xa4\xbb\xe5\x2e\x6f\x4a\xbb\x40\x5d\x9e\x31\xa8\x8b\xdc\x74\xc0\x93\x84\xd3\xc5\x1c\xac\xf0\x01\x29\xd6\x33\xd8\x3e\x71\xfc\xa6\xfa\x7d\x60\x30\x97\x9e\xf4\xbf\x39\xbf\x7e\x76\x77\xc5\xc5\x10\xc8\xe3\xa6\x7d\x63\x03\xbe\x45\xfc\xe3\x16\x9f\xca\x3b\xdd\xe5\xa7\x6b\xa6\x8b\x09\x5d\xeb\x38\x4b\x8a\x27\x13\x36\xf5\xf7\x89\x72\xb6\x55\xc4\x8e\x5b\x6f\x8e\xcf\xd6\x41\x4c\xad\x9e\x6a\x92\x74\x33\x0b\x3f\x24\x61\xfe\x5a\x74\x3c\x22\xee\x3e\xe1\x99\x8b\xa7\xbb\xd5\x7e\xd5\xd1\xa2\xed\xdb\xbc\x8d\x5c\x34\x87\x73\x74\xbc\x16\x2f\xaf\xd7\x60\xc8\xa6\xf2\xe0\x58\x3b\xa0\xf8\xd7\x9e\x45\x25\x31\x6d\x0c\xb7\x37\xf9\xf4\x31\xc3\x6d\xf7\x09\xcf\xe1\xf6\xe3\xf2\xf0\x04\x1a\xdf\x64\x6a\x52\x57\x4f\xd8\x1d\x0d\x50\xad\x65\x59\x7d\xa6\x72\x6e\xbf\xae\x97\xb0\xca\xe1\xe8\x2e\x56\xab\x61\xc1\x14\x37\xbd\x36\x28\x51\x34\x5b\xaa\xe6\x35\xab\x53\x31\x37\xfb\x9d\x34\xab\xad\xd9\xe8\xb3\x8e\xa8\xab\xf4\xd3\xd3\x2f\x14\xd4\xf4\x4e\x8c\x0b\x5f\x16\x2d\xd6\x79\x1f\x26\x57\x6d\x1a\x6e\x4b\xda\xed\x50\x58\x11\xa3\x46\xf0\xa6\x80\x71\x65\x2f\x5f\x17\x5a\x72\x7b\xbe\x05\x2c\x3a\xc2\xb0\xaf\xa8\x76\x90\xd4\x65\x05\x5a\xb1\xd1\xb2\x9f\xa8\xd7\xe5\xe2\x2d\xc9\xbd\x96\x52\x3e\x36\xb1\xda\xe0\xe6\x0e\x0f\x75\x99\xda\xa1\x72\x39\xf2\xa9\xc1\xc0\xc9\x9a\x97\x57\xd4\x9b\xb4\x3f\xa2\x0e\xa5\x5c\xd4\x7e\x21\x1b\x83\x17\x31\x71\xa4\xc3\xd1\xc5\x26\xc5\xd7\xc1\x71\x85\x7e\x4d\xc9\x64\xb7\xf9\x82\x77\xf5\x22\xd7\x83\x3b\x7f\x76\x6e\xed\x3c\x25\x22\x0c\x7b\xcb\xfd\x9d\xb2\xfc\x11\x6b\x13\xbd\xf5\x5d\x1b\xc6\x2d\xf4\x76\x8b\xbb\x05\xe5\x1d\xe4\x28\xee\xec\x19\x32\x25\x2d\xda\x88\x76\x92\xbe\xdb\xb7\xb5\x10\xe8\xe3\xba\x55\x04\xad\x65\x97\xc1\x81\x62\x19\x39\xb5\xaf\x75\xb8\x96\xa3\x7a\xf9\x4c\x28\xa6\x39\x99\xe6\xe4\x4c\x9b\x18\xb9\x9c\xfe\xf5\xe2\x99\x3a\x1b\xa9\x53\xf3\x7e\x27\x5d\x2a\xbb\x0f\x40\xf8\x8e\xf6\xb3\xa9\xd9\x7d\x40\x77\x07\xb2\xd5\x0b\xbb\x9f\x9c\x4a\x30\x7a\x58\xb7\x49\xe5\x21\x66\xf7\xc9\x9b\xf7\x28\xd3\xb5\x50\xd8\x09\x73\xcb\xa8\x76\xa1\x1e\x8c\x59\x62\x84\x2e\xbf\x0e\x3d\x66\x4c\x86\x24\xf1\xb1\xcf\x0c\x0c\xfe\xbb\xdf\x99\x53\xad\x25\xa1\xea\x16\x5b\x7d\x23\xe8\x95\x14\x6e\xd7\xbe\x28\x2c\x9a\x77\xcc\x7f\xb2\x57\x68\xe9\xc3\xe4\x7a\xdc\xf4\xd0\xe0\xcd\xed\xba\xca\x83\x89\x53\x5e\x54\xc7\xef\x87\x5d\xee\xba\x65\xe4\xfd\xa4\x8f\x9c\x4b\x6a\xba\x29\x7a\xd8\x5f\xad\x7e\xb8\xb4\x6e\xb0\x07\xa0\x53\xde\xa8\x8f\xa0\xaa\xbb\x24\x9f\x2c\xfe\x0b\x00\x00\xff\xff\x35\x82\x09\x63\xd3\x29\x00\x00")

func tmplSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_tmplSwaggerJson,
		"tmpl/swagger.json",
	)
}

func tmplSwaggerJson() (*asset, error) {
	bytes, err := tmplSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/swagger.json", size: 10707, mode: os.FileMode(420), modTime: time.Unix(1505404230, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"tmpl/css/style.css": tmplCssStyleCss,
	"tmpl/index.html": tmplIndexHtml,
	"tmpl/js/mapping.js": tmplJsMappingJs,
	"tmpl/js/request_logger.js": tmplJsRequest_loggerJs,
	"tmpl/js/sorting.js": tmplJsSortingJs,
	"tmpl/js/util.js": tmplJsUtilJs,
	"tmpl/swagger.json": tmplSwaggerJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"tmpl": &bintree{nil, map[string]*bintree{
		"css": &bintree{nil, map[string]*bintree{
			"style.css": &bintree{tmplCssStyleCss, map[string]*bintree{}},
		}},
		"index.html": &bintree{tmplIndexHtml, map[string]*bintree{}},
		"js": &bintree{nil, map[string]*bintree{
			"mapping.js": &bintree{tmplJsMappingJs, map[string]*bintree{}},
			"request_logger.js": &bintree{tmplJsRequest_loggerJs, map[string]*bintree{}},
			"sorting.js": &bintree{tmplJsSortingJs, map[string]*bintree{}},
			"util.js": &bintree{tmplJsUtilJs, map[string]*bintree{}},
		}},
		"swagger.json": &bintree{tmplSwaggerJson, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

