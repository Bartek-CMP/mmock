// Code generated by go-bindata.
// sources:
// tmpl/css/style.css
// tmpl/index.html
// tmpl/js/mapping.js
// tmpl/js/request_logger.js
// tmpl/js/sorting.js
// tmpl/js/util.js
// tmpl/swagger.json
// DO NOT EDIT!

package console

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _tmplCssStyleCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\xdd\x8e\xd3\x30\x10\x85\xaf\xf1\x53\x8c\xb4\xb7\x24\xa2\x4b\x57\x2c\xae\x84\xb4\xfc\xec\x6b\xac\xc6\xf6\x24\xb5\xe2\x7a\xa2\xb1\x4b\x5a\xaa\xbe\x3b\x72\xe2\x52\x2e\x08\x57\x51\xce\x77\xce\x19\x79\x6c\xad\x9b\x89\xcc\xe0\x73\x93\xac\x70\x08\x06\x05\x2e\x0a\x00\x60\xf2\x2e\xef\x35\x6c\x1e\xc7\xd3\x4e\x5d\xd5\x3f\x8c\x4d\x16\xb4\x43\xb5\x1b\xb4\x43\x2f\x7c\x8c\xae\xb1\x1c\x58\x34\x3c\x7c\x7b\xf9\xb1\x7d\x7d\xd9\x2d\x98\xc5\x91\x34\x81\xba\xac\x61\x33\x9e\x20\x71\xf0\x0e\x1e\xac\xb5\xab\xed\xfb\xe3\xc1\xac\xb7\x6f\x1f\x9f\x8d\xc5\xff\x86\xf5\x9e\x7f\x92\xac\x57\x6c\xbe\x7f\xda\x7e\x7d\x2d\x15\x4a\xb5\x89\x02\xd9\x4c\xee\x4d\x78\x82\x0b\x74\x1c\x73\x33\x91\xef\xf7\x59\x83\xe1\xe0\x76\x57\xd5\xa6\x2c\x3e\xf6\x70\x81\xda\xd0\x0b\x51\xdc\xc1\x55\xb5\xf1\x78\x30\x65\xd4\x8d\x38\x94\x81\x05\x63\x4f\x33\x36\xcc\x81\x30\xde\xb9\x09\x47\xaa\xc1\x10\xee\xf2\x01\x7b\x8a\x19\x67\x32\xd0\xf9\x0e\x84\x5c\x11\x55\x46\x13\x08\x5a\xcb\x21\xe0\x98\xa8\xf5\x11\x2e\xea\x9d\xf3\x69\x0c\x78\xd6\x33\x6d\x84\xa7\xf9\x4c\xed\xf2\xbb\x2c\xe1\x0b\x64\xc3\xee\x5c\xbe\x52\xcf\x5a\x8c\xfa\x0f\x75\xef\xd5\x5f\xfa\xac\xac\x6f\xae\xeb\xba\x65\x44\x62\xc9\x3e\xf6\x6f\xde\x72\x4c\xd5\x3f\xa2\x73\x3e\xf6\xf5\xb2\x9f\xca\xfb\x29\xf2\x2d\x8b\x88\x8b\x30\xaf\x38\xf9\x5f\xa4\x3f\xb4\xcf\x74\xa8\x85\xf5\x1a\x6a\xd7\x2d\xe4\x3e\x3f\x7d\xdc\x96\x99\xbf\x03\x00\x00\xff\xff\x34\x26\x70\x42\xb1\x02\x00\x00")

func tmplCssStyleCssBytes() ([]byte, error) {
	return bindataRead(
		_tmplCssStyleCss,
		"tmpl/css/style.css",
	)
}

func tmplCssStyleCss() (*asset, error) {
	bytes, err := tmplCssStyleCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/css/style.css", size: 689, mode: os.FileMode(420), modTime: time.Unix(1506703252, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x3a\xdb\x72\xe3\xb6\xd9\xf7\x7e\x0a\x2c\xff\x3f\x1d\xef\x6c\x48\x5a\xd6\x7a\xed\xd8\x14\x67\x36\xb6\xd2\x8d\x47\xda\x75\xd6\x8e\xdd\xe4\x66\x07\x24\x3e\x89\x90\x41\x80\x06\x40\x1d\xb2\xe3\x99\x3e\x41\xdf\xa3\x17\x7d\x89\xf6\x4d\xfa\x24\x1d\x90\x14\x45\x1d\x28\xd1\xde\x49\x9a\xc6\x17\x36\x09\x7c\x47\x7c\x47\x7c\xb4\xf7\xe2\xe2\xc3\xf9\xcd\x4f\x57\x5d\xf4\xee\xa6\xdf\xf3\xf7\xbc\x48\xc7\xcc\xdf\xdb\xf3\x22\xc0\xc4\xdf\x43\x08\x21\x2f\x06\x8d\x51\xa4\x75\x62\xc3\x43\x4a\xc7\x1d\xeb\x5c\x70\x0d\x5c\xdb\x37\xb3\x04\x2c\x14\xe6\x6f\x1d\x4b\xc3\x54\xbb\x06\xff\x0c\x85\x11\x96\x0a\x74\xe7\xc7\x9b\xef\xec\x13\x0b\xb9\x05\x25\x4d\x35\x03\xbf\xdf\x17\xe1\x3d\x3a\x17\x5c\x09\x06\x9e\x9b\x2f\xe6\x00\x2a\x94\x34\xd1\x48\xc9\xb0\x63\x19\x8e\xea\xd4\x75\x43\x41\xc0\x19\x3d\xa4\x20\x67\x4e\x28\x62\x37\x7f\xb4\x0f\x9d\x96\xf3\xda\x89\x29\x77\x46\xca\xf2\x3d\x37\x47\xdd\x46\x87\xf0\x91\x72\x42\x26\x52\x32\x60\x58\x42\x46\x0c\x8f\xf0\xd4\x65\x34\x50\x6e\x84\x39\x61\x10\x60\xa9\x9c\x91\x72\x0f\x9d\x03\xe7\x60\x79\xad\xca\x24\xe7\xc2\x28\xbf\x47\x12\x58\xc7\x52\x7a\xc6\x40\x45\x00\xda\x42\x91\x84\xc1\x82\x6b\x8c\xa7\x21\xe1\x4e\x20\x84\x56\x5a\xe2\xc4\xbc\x18\xc6\xe5\x82\xdb\x76\xda\xce\x1b\x37\x54\x6a\xb1\x96\xa9\x15\x2a\x65\x21\xca\x35\x0c\x25\xd5\xb3\x8e\xa5\x22\xdc\x3e\x79\x6d\xb7\x1e\x4e\xe2\x9b\xcb\x0f\x6f\xaf\xa7\x27\xa3\xd6\xdb\xf4\x15\x3e\xba\xbb\xb8\xe5\x57\xf4\x90\xdd\x7f\x37\x98\x4c\xba\x6f\xf1\x49\x74\x71\x41\x46\x3f\xb3\xa4\x07\xc3\x69\x34\xba\xed\x77\x5b\x83\xe1\xe8\xee\xea\xcf\xf1\xfd\x2f\xea\xd8\x42\xa1\x14\x4a\x09\x49\x87\x94\x77\x2c\xcc\x05\x9f\xc5\x22\x55\x96\xff\x2b\x2b\x65\xeb\x08\x62\xd8\xa6\xda\xa0\x77\x77\xf8\xfe\xa0\xc5\xfa\x0f\x23\x7c\xff\xed\xfd\xb4\xcd\xdc\xfe\x37\x5d\x1c\xa5\x93\xe4\x7a\x00\xef\xc7\xb7\x6f\xda\x97\x47\xf0\x0b\x6f\xa7\x3f\xff\x82\x93\x9b\x83\xf4\xb8\xfb\x93\xfa\x4b\x7f\xf4\xc3\xed\xab\x83\x2e\x3f\x92\xbb\x54\xdb\xe4\x15\x4d\x55\x19\xad\x9a\x67\xb4\x51\x85\x83\xf8\x3a\xb8\xbc\xe8\xbe\xa3\x98\x0d\xe2\xf4\xdb\x6f\x7f\xb8\x7a\xf3\xf6\xf5\x0f\x32\x91\x0f\x47\x1f\x6e\x07\x77\xed\xe3\xab\x8f\x1f\xdb\xa3\xa3\x6e\xef\x61\xaa\x54\x6b\x76\xfb\xf0\x41\x73\x48\xf8\xbb\xdb\xab\x6f\xf0\xe5\xf1\xf4\xba\x5e\x85\x8d\xce\xb7\x6c\x96\x1d\x1e\x5e\xca\xdf\xb6\x09\xc5\x4c\x0c\xdd\x96\xd3\x7e\xed\x7c\xb3\x62\xa6\x7c\x6f\x61\xa7\x35\x5f\xd0\xb3\x04\x8a\x68\x37\x00\xcf\x0f\xb9\x5a\x81\x46\x35\xf2\x6c\x0a\xc2\x82\x6f\x45\xa8\x4b\x3c\xc6\xd7\xd9\xaa\x95\x8b\x33\x52\x6e\xaa\x29\xdb\x92\x28\x76\x60\x4b\x78\x48\x41\xe9\x4f\x4c\x0c\x87\x20\x9f\x4f\x27\xc6\x49\x42\xf9\xf0\xf9\x04\x94\x90\xba\x86\xc0\xe6\xb8\x5d\xb1\x55\xe1\x30\xc6\xe0\x19\x94\x53\x31\x60\x96\xe6\x39\x8e\xa1\x63\x8d\x29\x4c\x12\x21\x75\x25\xb9\x4f\x28\xd1\x51\x87\xc0\x98\x86\x60\x67\x2f\x5f\x23\xca\xa9\xa6\x98\xd9\x2a\xc4\x0c\x3a\x2d\xab\x89\x2a\x39\x8c\xf9\xf9\xff\x7d\x44\x44\x98\xc6\xc0\x35\x7a\xe9\x48\xc0\x64\xb6\x3f\x48\x79\xa8\xa9\xe0\xfb\x2f\xd1\x67\x54\x42\x9a\x9f\xa5\x97\x31\x96\xa8\xb0\x49\x2f\x33\x09\xea\x20\x0e\x13\xf4\xb1\xba\xb6\xff\xf2\x6c\x1d\x6b\xa2\x0a\xd0\x3b\x08\xae\x45\x78\x0f\x7a\xdf\x9a\x18\x57\xb5\xd0\x2b\xc4\x44\x88\x0d\x77\x27\x12\x4a\xa3\x57\xc8\x72\x21\x8c\x84\xf5\xf2\x6c\x89\xcc\x44\x39\x82\xc7\xa0\x14\x1e\x02\xea\xa0\x52\x64\x18\x03\xd7\x6b\x72\xcf\x19\x2f\x10\x2e\xaf\x3f\xbc\x77\x12\x53\x1f\x73\x14\x87\x60\x8d\x57\x78\x98\x9f\x25\x05\x1d\x26\x86\x5d\xae\xe5\x6c\xbf\x20\xb4\x82\xf0\x78\xb6\xb7\xb7\xa6\x6c\xe1\x6e\x85\xc6\xfd\xfc\x6d\x7f\x49\xcb\x15\x32\x73\x07\x1d\x50\xc6\x7a\x54\xe9\xfd\x95\x7d\xac\x35\x0e\x23\xb3\x03\x1c\xa4\x5a\xdb\x4e\x12\x36\xbb\x80\x01\x4e\x99\xbe\xce\x5d\xb5\x0a\xf2\xf8\xf2\xac\x08\xda\xd2\x75\x3d\x37\x6f\x34\xf6\xbc\x40\x90\x59\xe1\x40\x91\x2c\x1e\x08\x1d\xa3\x90\x61\xa5\x3a\x96\x71\x44\x4c\x39\x48\x7b\xc0\x52\x4a\x2a\x7e\xe4\x45\xad\xd5\x96\x22\x6a\x55\xb6\x2b\x44\xa4\x98\x54\x10\xb3\x5d\xac\x28\x81\x05\x13\x66\xc7\xc4\x3e\x44\x09\x26\xb6\xa4\xc3\x48\xdb\x07\x2b\x08\x19\x52\xca\xe6\x18\x1c\x8f\x11\xc7\x63\x3b\xa1\x8c\xa9\xec\x49\x69\x1c\xde\x03\xd9\x80\x86\xf2\x30\x9d\xa3\xe2\x50\xd3\x31\x58\xbe\x87\x91\xf1\x00\x5b\x8b\xe1\x90\x99\x88\xc1\xc1\x3c\x4e\xff\xaf\xf0\x01\xcb\x2f\x3c\x5b\x79\x2e\xae\x21\xec\x32\x5a\xcb\x72\x2b\x8f\xc2\xe6\x96\x5f\x38\xc8\xf3\x59\xe4\x04\x47\x78\x8c\x73\xf3\x9e\x9e\x59\xcb\x6c\x63\x41\x30\x9b\xaf\x61\x39\x04\x6d\xf8\xcf\xfa\xd9\xb2\xff\x36\x10\xa9\x7e\x22\x77\xcf\x4d\xd9\x8a\x45\xdd\xcc\xa4\x2b\x8b\x4b\x9e\x94\x19\xb9\x65\x2c\xbb\x4e\xaf\x02\xa8\x71\x60\x17\xf9\xaf\xce\x9a\x2f\x6c\xfb\x06\x07\xa8\x65\xdb\x35\x00\x86\x1c\x25\x1d\x6b\x6e\xc8\x2a\xed\x04\x73\x40\x03\x4c\x00\x51\x8e\xe6\xde\xb0\x91\xcc\x9c\x17\xe5\x81\x98\x22\x2d\x04\x0b\xb0\xac\xe3\xb9\xaa\xc6\xba\xd3\x6f\x83\x36\xa7\x33\x55\x76\xeb\x70\x07\xce\x2a\x5e\x92\x32\x96\x87\x4c\x03\xc4\x0c\x19\xcf\x51\x03\xcd\x51\xa0\xb9\x4d\xf2\xc4\x91\x3d\x4f\x95\x85\xb2\x8b\x41\xc7\xfa\x08\x03\x09\x2a\xb2\xb2\x73\x0c\x34\x3f\x67\x80\x65\x4f\x0c\x1b\xf0\xc9\x40\xb7\xab\x5e\xe7\x6e\xcb\x40\x84\x8e\x77\x1c\x61\x03\x90\x17\xb6\xed\x9a\xe3\xdd\x62\x37\x54\x67\x0d\xa4\x12\x1c\x82\x3c\x32\x65\x7f\x2b\xa7\x5d\xdb\x46\x08\x29\x26\x5b\x9d\xc7\xc0\x3c\xcb\xd5\x8c\x47\x33\x94\xfd\x2e\xad\xb9\x28\x63\x56\x35\x12\x7a\x62\x78\x65\xe0\x76\xb9\xe6\x0b\xdb\x9e\x97\x4e\x46\x95\x6e\x74\x78\x15\x36\xb6\xc9\x35\xd5\xa8\x63\x60\x4b\x50\x89\xe0\x6a\x7b\xb8\x95\x04\x33\x9c\x25\x92\xd9\xca\x32\x4d\x94\x53\x8e\xc4\x18\x4c\x67\x92\x39\xac\x5d\x96\x2c\x94\x05\x07\x11\x13\x6e\xa1\xac\xed\x9a\x4b\xc2\xf0\x4c\xa4\xfa\x14\x0d\xe8\x14\x48\x5e\x27\x27\x42\x12\x7b\x22\x71\x72\x8a\x02\x09\xf8\xde\x36\x0b\x67\x4d\x63\x4a\x9b\x6a\x3a\x97\x2c\xa2\x84\x40\x16\x4a\xcd\xb0\x73\x0a\xb2\x39\x70\xc1\xb2\xea\xac\x2a\xb6\xdb\x96\xef\x29\x2d\x05\x1f\xfa\x17\x58\x83\xe7\x16\x2f\x4f\x23\xeb\xea\xe8\x4b\x05\x69\x2d\x04\x39\x17\xe4\xf7\x21\x48\x1f\x74\x24\xc8\x7f\x4f\x94\xe3\x85\x28\x57\x58\x47\xbf\x85\x20\x9e\xdb\xd4\xa7\x0c\xdd\x72\xec\xb4\x13\x58\x2f\x3a\xc6\x06\x84\x9b\x01\x7b\x6e\x16\x98\x5f\x94\xeb\x9b\x64\xe0\x3c\xbb\xe6\x89\xb2\x61\x6e\x9d\x00\x63\xc8\xfc\xb2\x15\x32\x97\xaa\x79\xb1\xf5\x20\xf6\x7b\x58\x95\x89\x16\xa5\x09\xc1\x1a\xc8\x29\xf2\x54\x82\x79\x96\xb9\x18\x56\xfa\x53\xb1\x6e\xf9\x77\x98\x66\x97\x48\xc7\xf1\x5c\x03\xe2\x7b\x2e\xc4\xcf\xd2\x67\xdb\xd6\x0b\xdb\x46\xa6\x37\x3a\xdc\xd9\x1b\xcd\x1b\xd0\x8d\xbd\xd1\x8e\x8e\x68\x67\x2d\x5b\x61\xf2\x45\xf5\xa0\x52\x0b\xe6\xe4\xea\x6b\x81\xd2\x92\x26\x40\xaa\x95\xa1\x51\xb9\x79\x4a\x04\x3c\x21\x57\x9b\x54\x90\xdf\xe1\xad\xd6\xd1\x57\x79\x29\x4e\x25\xb5\xfc\x1f\x25\xcd\x1d\xa5\xd0\xa1\x18\x31\x7c\xa2\xa1\xe0\xca\x64\x8b\xca\xde\x90\xcd\x92\xc8\x6c\xa0\xf2\xc9\x0e\x23\x18\x4b\xc1\xf3\xf2\xe6\xcf\x3d\xaa\x29\x56\x9a\x2c\x70\x56\xfe\x3c\x29\xc7\x2c\xb4\x3b\x7c\x53\x68\x47\x40\x85\x96\x7f\x01\xf9\x5d\x84\x0a\xfe\x3b\x53\xf3\x99\xfa\xb5\x0e\x0a\xfd\xe2\xac\x94\x58\xf3\x92\xf2\x87\x50\xae\x34\x5e\x82\x75\x64\xe5\x25\xea\x0f\xa1\xd8\xc9\x57\x16\x2a\x9a\x48\x95\xb2\xec\x42\x6f\xfe\xfe\x6f\x2b\xf7\xab\x62\x34\x6b\x1b\xca\x96\xa1\x41\x66\x6d\xd6\x02\x34\x61\xb9\x9b\xd2\xce\x46\xe2\x19\x55\x75\xc3\xfa\xca\x52\xe5\xb5\x78\xcc\x9f\x4d\x2d\xce\x86\x2c\x28\x9b\xb1\xcc\x0b\x66\xb5\xbd\xc8\x46\x33\x79\xc5\xcd\xb3\x4b\x31\x95\x41\x52\x98\xfb\x4a\x3e\x84\xb7\x36\x8f\xd5\x32\xdc\x62\x4e\x8f\xf2\x17\x15\xaf\x0e\xda\xd6\xe0\xeb\x47\x2b\xeb\xb0\xc6\xc6\xb5\xf5\xd3\x0b\x52\xad\x05\x2f\x06\xce\xf9\x4b\x59\x92\x43\x26\x14\x14\x23\x27\x42\x55\x4c\x4b\xa2\x96\xff\x27\x4d\x63\x50\x67\x9e\x9b\xe3\xd4\x50\x8f\x5e\x2f\xcb\x92\x8d\x25\xac\x62\xe4\x78\x07\x41\x65\xec\xf8\x7a\xd3\x80\x6a\xa3\x31\xd7\x55\x34\x3e\x55\xa7\x60\xe2\xf7\x63\xc3\x8d\x2a\x84\x39\x7a\x77\x73\x73\x85\xcc\x3b\xe5\xc3\x6c\xe4\x4a\xf3\x81\x2e\x1a\x08\x89\x34\x28\x9d\xad\x73\x82\x06\xa6\x2d\x4c\xa4\xd0\x42\xcf\xf2\xc9\x5e\x52\xcb\xa0\x47\x43\xe0\x21\xa0\x73\x91\xcc\xb2\xce\x12\xfd\xf3\xef\xff\xfe\xeb\xdf\xd0\xe1\x41\xeb\xf8\x6b\x74\x29\x24\xa1\xa8\x8f\xa5\xfe\xd7\x3f\x38\xda\x2f\x67\x7d\x91\xd6\xc9\xa9\xeb\x8e\xcc\xb6\x43\x85\x85\xe6\x53\xbd\x4f\x01\xc3\xfc\xde\xf2\x57\x00\x3c\x17\xfb\x2f\xb7\x89\xf1\x11\x18\x60\x05\x04\xa5\x9c\x80\x44\xfd\xef\x6f\x10\x33\x92\x29\xf8\x1a\x29\x00\xb4\xc4\x59\x9d\xba\xee\x90\xea\x28\x0d\xf2\x0f\xc3\x31\x36\x09\xf4\xe4\xd0\x8d\xcd\xe9\xb8\x01\x13\x81\x1b\x63\xa5\x41\xba\xbd\xef\xcf\xbb\xef\xaf\xbb\x4e\x4c\xd6\x65\x2c\xf6\xb6\x4c\x1e\x13\x3f\x3b\x5b\x02\x1a\x53\xa6\x1c\x63\x71\x2d\x69\x90\x6a\x38\x7d\x8a\x44\x9b\x8f\x67\x3b\xce\x46\xa9\x1a\x3b\xd5\x40\x08\xfd\xbc\xb8\x59\x19\xca\xd5\x44\xd0\xb9\x89\xae\xfa\xf8\xf9\xb2\x8c\x75\xd3\xed\x5f\xf5\xde\xde\x74\xaf\x51\x99\xb0\x8a\x4f\x4b\xd5\x69\x0c\x70\x2d\x67\x4b\x1f\xba\xa6\xf6\xe2\xbb\xbd\xad\x21\x4e\x18\xd6\x50\x1d\xf6\x7a\x5a\x2e\xd2\x03\x0d\xef\xb3\xae\xfd\xf3\xe7\xf9\x57\xbe\x50\x30\x21\x1f\x1f\x57\xe6\xd4\xe5\x40\x29\x77\x02\x7b\x01\xcf\xd3\xf8\xf1\x71\x35\xdd\x69\xb2\x3e\x16\x59\xa0\x98\x9b\xd8\xe3\xa3\xe7\x6a\xb2\x0b\xad\x65\xf9\x5e\xe0\x57\x85\x23\x19\x66\xb0\x7a\xac\x8d\x48\x2d\xe8\xe4\xdd\x63\x33\x19\x8e\xab\x88\xa6\x33\x5b\x45\x5b\xae\xd5\xe6\x78\x97\x46\x70\x35\x27\x56\xf6\x3d\xc0\x20\xd4\xb6\x14\x93\x72\x3c\x46\xa8\x4a\x18\x9e\x9d\x22\x2e\xf8\xea\xad\x2c\x93\x4f\x30\xd3\xb2\x74\xac\xd7\x75\xe5\xa3\x20\x94\x60\x42\x28\x1f\x9e\xa2\x83\x64\x8a\x5a\x47\xd5\x5f\x75\x51\x11\xb5\xfd\x8b\x5c\x62\xcf\x8d\xda\xf5\x40\x4b\x9d\x16\xc3\x01\x30\x94\xfd\xb6\x13\x49\x63\x2c\x67\xe5\x47\x9b\xb2\xbd\xaa\xa5\xb6\x7d\x60\x90\xc8\xf2\x03\x55\x22\xc1\x56\xa1\x14\x8c\x65\xf7\x4e\xdf\x33\xee\xe0\x7f\x2e\x4f\xf6\xd1\x58\x26\x5b\xf3\xdc\x44\xd6\xb4\x1f\xdb\x5a\x8f\x6d\x7a\xad\x47\x88\xe9\x62\xcd\xd5\x19\x7e\x1b\x15\x73\x5e\xbf\xaa\x8e\xf3\x74\xe7\xf7\xc4\xf0\x37\x51\x8a\x89\xe1\x53\x14\x6a\x96\x62\x37\xc7\x66\xe5\x3f\x27\xd6\xb2\xe9\x7c\x9e\xd1\x3c\x9b\x96\xf4\x57\xdb\x74\x4f\x93\x3c\x65\xfd\xf8\xf1\xfb\x3c\x53\x6d\xcc\x31\xfe\xe7\xcf\x64\x71\x37\xaf\x49\x44\xdb\x9c\x31\xcf\x60\x0b\x5f\x2c\xdd\xd3\x59\xe4\xb6\xf9\xbd\x66\x23\xfb\x12\x3e\x4f\x69\x4f\x97\x40\x69\xac\x53\xb5\x2c\x41\xee\xa3\x4e\xbe\x75\x5e\x24\xeb\x2d\x62\xec\xfa\x0c\x96\xfd\x19\x53\x98\xd8\xe5\x98\x2c\x2b\x4b\xa9\xa4\x1d\xab\x38\x63\xcb\xbf\xa5\x30\x31\x9d\xc2\x17\xf0\x00\x42\xf5\x56\x1e\x5d\x42\xf5\x3a\x8f\xcd\xee\xe5\xb9\xf9\x15\x69\xcf\xcb\xfe\x21\xd0\xff\x4f\x00\x00\x00\xff\xff\x27\xde\xf8\x95\x67\x28\x00\x00")

func tmplIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tmplIndexHtml,
		"tmpl/index.html",
	)
}

func tmplIndexHtml() (*asset, error) {
	bytes, err := tmplIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/index.html", size: 10343, mode: os.FileMode(420), modTime: time.Unix(1506706832, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplJsMappingJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\xdf\x8b\xe3\x36\x10\x7e\xcf\x5f\x31\xa8\x0b\xb2\xd9\xc4\x59\x28\xa5\xe0\x6c\xf6\xe1\xb6\x85\xa3\xf4\xda\xc2\x5e\x9f\xb6\xcb\xa1\xd8\xb3\xb1\xee\x64\x49\x95\xc6\xbb\x31\x25\xff\x7b\x91\x63\xe7\x9c\xd8\xc9\xe5\x60\xe7\x29\xf2\xcc\x7c\xf3\xe3\xfb\xa4\x3c\x57\x3a\x23\x69\x34\x7c\x10\xd6\x4a\xbd\x8e\x72\x53\x0a\xa9\x63\xf8\x6f\x32\x01\x00\xa0\x42\xfa\x64\xf7\x0d\x96\xb0\xfb\xd1\x38\xe6\xf3\xcc\x94\x56\x2a\x04\x2a\x10\x08\x4b\xab\x04\x61\xe3\x7a\x11\x0e\xca\x1d\xdc\x27\x6f\x2a\x97\x21\x2c\xe1\x2a\x62\x3f\xb4\x1f\x67\xa8\xc9\xd5\x2c\x4e\x0a\x2a\x55\x14\x2f\x06\x49\x1d\x1a\x2c\xe1\xbd\xd0\xb9\xc2\x95\x70\x3e\x69\xeb\x45\x87\xd0\xf1\x62\xb2\xcf\x7f\x96\x4a\xfd\x2e\x3d\xc1\x12\xba\xb9\xa2\x30\x09\xb4\x76\x95\xac\x91\x7e\x7b\xf8\xf3\x8f\x88\x15\x44\x36\x9d\xcf\x19\x5c\xb7\x43\xc1\x35\xb0\xb9\xb0\x72\xde\xc2\xb3\xe9\x57\x8c\x5c\x90\xe8\xe3\x74\xf5\x24\x61\xe9\x61\x09\x8f\x4f\x8b\x03\x5f\x7f\x56\x12\xab\xb0\xa3\x95\xc9\xc3\xc4\x58\x5a\xaa\xbb\x91\xbf\xb6\x85\x22\x2b\x9a\x2a\xbd\xa2\x5f\xb0\x9e\x76\x1b\x39\x2e\x1e\xac\x75\x3d\x72\x4f\x82\x2a\xff\x29\x33\xca\x38\xfe\x04\x4b\x80\x35\xd2\x7d\x38\xbd\xab\x1f\x1a\x5f\xb7\xb2\xc4\xa1\xb7\x46\x7b\x4c\x76\x39\xf7\x26\xc7\xa3\x5e\x0e\x90\x4b\xa4\xc2\xe4\xe3\xc8\x1f\x1a\x5f\x0f\xf9\xdf\x0a\x3d\x25\xbb\x94\x11\xd0\xb0\xaf\xc0\x37\x2c\x07\x34\x77\x20\x23\x59\xa7\x37\x29\xac\x45\x9d\x47\x01\xf2\x28\x6f\xdb\x3b\x6f\x3b\x79\x6c\x17\x3d\x3d\xf7\x75\xd2\xfe\x6c\xdd\x57\x11\xdf\xd7\x0b\x7c\xf0\x38\x31\x3a\xe2\x99\x92\xd9\x17\x3e\x05\x9e\xac\x48\xcf\x5e\x24\xbe\xce\xda\x28\x3e\x1d\x97\x5a\x18\xb7\x72\xb2\x11\x7e\xa8\x19\x27\x01\x2e\x62\x95\x93\xac\xd7\xdf\xf7\x28\xb2\x71\x55\x4e\x5e\x20\xcc\xcc\x68\x42\x1d\xe6\x0b\xd8\x89\x27\x27\xf5\x5a\x3e\xd7\xad\xc6\x74\xa5\xd4\x14\xd8\x3f\xc4\xe2\x83\xd4\x77\xc6\x90\x27\x27\xec\x2f\x52\x28\xb3\x4e\x7c\x61\x5e\xa3\xa1\xf2\x48\x92\xc2\x14\x78\xfb\x64\x40\x8e\xcf\x52\xcb\xd0\x10\x9f\x0e\xc5\x84\xde\x8b\x75\x08\xbf\xb5\x0e\xef\x38\x5c\x83\xaf\x35\x89\xcd\x7b\xb9\x2e\x94\x5c\x17\x14\xb5\xdd\xc6\x70\x0d\xfc\x76\xde\x44\x9d\x25\x74\x4f\xec\xe5\x94\x61\x2e\xe9\x8d\x28\x0b\x61\xa8\x73\x6b\x64\xb3\xe0\xcb\x79\x1b\x63\xbd\x03\x7a\x23\x4e\x87\x94\x86\xcc\x2b\xc2\x0d\x35\x63\xf1\xdb\xf0\x53\x38\x14\x20\xf3\x25\x0b\x87\x59\x65\x73\x41\xd8\x2d\x87\x81\xa7\x5a\xe1\x92\x95\x52\xcf\x5e\x65\x4e\x45\xfa\xd3\xcf\x37\x76\xb3\x08\xe7\x02\x03\x5f\xe9\x8f\x37\x37\x76\xc3\xee\x6e\xe7\x1d\xd8\x1d\x3f\x7e\xd1\x82\x27\x79\x11\x6a\xcf\xed\x81\xfb\x2d\x44\x17\x18\x3d\x27\xb7\xa6\x85\xa1\x7f\x55\x11\x19\xed\x53\x78\x1c\x96\x08\xa6\xc4\x0a\x55\x0a\xfc\x5e\xe8\x0c\xd5\x48\x81\x60\xa2\x61\x2a\xed\x71\xd6\xb4\x3e\xf6\x4a\x77\xb6\x8b\x48\x32\x65\x3c\x1e\xbf\xff\x9d\x6d\x07\x5f\xb7\xd3\x13\x90\x5d\x9b\x0f\xe2\x05\x4f\x34\x99\x79\x7f\xaf\x84\xf7\x29\xf0\x70\x03\xac\x93\xa5\x70\xf5\x9b\x4d\x74\x28\xc9\x70\x09\x47\xd4\xc4\xe3\x46\x04\x27\xe6\x6d\x6e\x82\xf8\x2c\x36\x23\x74\xf7\x8d\x6a\x1b\x98\xff\xeb\xef\x8f\x27\xba\xef\xac\x72\x2a\xdd\xdf\xcd\xf3\xa1\xe1\xd2\xa4\xdd\x00\xe7\x43\x7d\x95\x65\x18\xf6\x78\x7c\x45\x07\xac\xee\xff\x4d\xa2\x18\xb6\xe7\x41\xd1\x39\xe3\x46\x20\x85\x42\x47\x11\xfb\x75\xe7\x66\xd7\x23\x77\x3d\x8e\x17\x83\xc2\xdf\xa8\xd6\xce\xf9\xb1\x59\x24\x13\xd6\x2a\x99\x89\x50\x77\xfe\xd9\x1b\xcd\xbe\xbd\xaa\x5d\x26\x0f\xd1\xfc\x64\xf0\xf6\x72\x5d\x3f\x5d\xf8\xc0\x4f\x26\x93\xed\xff\x01\x00\x00\xff\xff\x3c\x1c\xde\x73\xa3\x0a\x00\x00")

func tmplJsMappingJsBytes() ([]byte, error) {
	return bindataRead(
		_tmplJsMappingJs,
		"tmpl/js/mapping.js",
	)
}

func tmplJsMappingJs() (*asset, error) {
	bytes, err := tmplJsMappingJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/js/mapping.js", size: 2723, mode: os.FileMode(420), modTime: time.Unix(1506671021, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplJsRequest_loggerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x55\x4d\x6f\xe3\x36\x10\xbd\xfb\x57\xcc\x6a\x17\x30\x59\xbb\x4a\xb6\xe8\x49\x86\x80\xa2\x69\x8a\xa0\x48\xb6\xe8\x26\x45\xd1\x53\x40\x4b\x13\x59\x58\x8a\x54\xc9\x61\xbb\xc6\xc2\xff\xbd\x20\xa9\x6f\x38\x1f\x3a\xe4\x30\x7e\xf3\xf8\xf8\xe6\x85\xf3\xe4\x54\x41\xb5\x56\xf0\x19\xff\x71\x68\xe9\x56\x57\x15\x1a\xc6\xe1\xdb\x0a\x00\xe0\xe2\xa2\xd0\x4d\x5b\x4b\x04\x3a\x20\x10\x36\xad\x14\x84\xe1\xa7\x7f\x85\x01\xab\x9d\x29\x10\x72\xf8\xc0\x92\xf7\x26\x32\x7c\x8f\x8a\xcc\x31\xe1\xe9\x81\x1a\xc9\xf8\x6e\x00\xf7\xdd\x90\xc3\x8d\x50\xa5\xc4\xbd\x30\x36\xed\xf8\x59\xa4\xe2\xbb\x55\xc0\xd3\xa1\xb6\xa9\x72\x0d\xe4\x70\x19\x2b\x83\x50\xd7\x96\x82\xf0\xa1\x26\x89\x83\x4c\xff\x7d\x60\xa5\x2e\x5c\x83\x8a\x78\x2a\x88\x0c\x4b\xc8\x63\x92\x2d\x24\x9f\xae\xff\x82\xcf\xd7\x7f\xfc\x79\x7d\xff\xf0\xee\x5d\xd2\x49\xf2\x9f\x45\x7a\xa8\x1b\xd4\x8e\xd8\xc0\xef\x49\x5f\x22\xbb\xbb\xd3\xc5\x17\xb8\xd2\xca\x6a\x89\x09\xdf\xc1\x69\x0b\x3f\x5c\x5e\x5e\x76\xb4\xa7\x85\xdc\x0a\xa9\xb3\xd6\x9f\xc4\xa8\x6e\xd0\x92\x68\xda\xa9\x74\xef\x8e\x19\x41\x90\x83\xc2\xff\xe0\x17\x41\x13\xfc\x77\x1f\xc7\x33\xfa\x1e\x6f\x04\xc5\x86\x49\x7b\x5a\x21\x85\x5e\x0e\x1b\x48\x2e\x12\xd8\x0c\x4d\xfe\x63\x0b\xe8\x9d\x56\x74\x08\xd8\x8f\xe7\x1b\x16\xf8\x5f\x9d\x94\x7f\xa3\x30\x91\x1e\x7e\x82\x57\xf0\x37\xda\x19\x1b\xc1\xd9\x2b\xd0\xbb\x5a\x39\xc2\x37\x82\xef\xb1\xd0\xaa\xb4\x6c\xe2\x89\x41\x72\x46\x0d\xb6\x9c\x1f\x48\xcc\xcf\xad\xb0\xfd\x5c\xe6\x3e\xcf\x23\xb5\x7e\x2f\x85\xa5\xc7\xd8\x53\xae\x79\x4a\xf8\x95\xd8\xb3\x33\x7d\x3e\x03\x57\x5a\x85\x56\xe5\x9a\xad\x17\x28\x96\xf3\xb7\x24\xc8\x59\xc8\xc3\x8f\xa9\x41\xdb\x6a\x65\x31\x8d\xe5\x2b\x5d\xe2\x7c\xf4\x0d\xd2\x41\x97\x23\x3c\xa8\x49\x63\x75\x8e\x6c\x05\x1d\x96\x38\x5f\xdb\x9d\x8b\x1f\xe4\x60\x8f\x8a\xc4\xd7\x9b\xba\x3a\xc8\xba\x3a\x10\xfb\xed\xfe\xf7\x4f\xa9\x25\x53\xab\xaa\x7e\x3a\xb2\x29\xcf\x16\x9c\x2a\xf1\xa9\x56\x58\x6e\xe1\x47\xce\x97\x94\xf1\x0e\x6f\xe6\x8c\xf0\x97\x49\xa5\xae\xde\xce\xe7\xe4\x2b\x12\x0b\x2d\xb5\x81\x3c\x0e\x48\x6a\xf3\xf3\xf1\x3e\xf8\xcd\xa2\xed\x7c\xb5\x8c\xd6\xb7\xde\xa8\x47\xe5\x9a\x0c\xc2\x34\xbb\x4a\x06\x83\x2b\xfd\x55\x32\x18\x2f\x65\xa4\xae\x32\x2f\x7f\x68\x78\xf4\x99\xca\x96\x0f\x44\xd0\xee\x13\xc5\x47\x60\xa1\x4b\xcc\xba\x84\x8c\xd5\x38\xec\xac\x8b\xc2\x58\xf7\xc3\xcd\xc2\xd8\xa7\x0c\x52\x9b\xac\xbb\xef\x69\x96\xd2\xf0\xd4\x4a\x5d\x5d\xfb\x67\x1b\xf2\x31\xb5\x6c\x19\xd3\xfe\x51\xde\x6c\x96\x2e\x86\x6c\xf7\x3e\xc6\xa0\xf7\xe0\x2e\xed\xf3\x0e\xbf\x1a\x20\x1f\x36\x02\xeb\x18\x26\xa8\xe9\x42\x21\xb1\xf7\x0b\x68\xaf\x4b\xbf\x56\x5a\x83\x2d\xaa\x92\x79\x8e\x49\xc3\x6c\x2d\x2c\xcb\xcb\xff\xf6\xd1\xe4\x6e\xdf\x9c\x76\xab\xd3\x6a\x35\x7d\xf5\x0d\x8a\xf2\x38\xdf\x0a\xab\x5e\xd8\x9e\xd4\x95\x44\x61\x6e\x75\x95\xf0\xb4\x90\x75\xf1\xe5\x0c\xf2\xe5\x6b\x60\xd3\xd2\xb1\x57\x7a\xea\x75\xf8\x17\xa7\xc7\x7b\x91\x6b\x9e\x6a\xc5\xd6\xe1\x88\xf5\x16\xd6\x1d\x87\x59\x6f\xe1\xfc\x81\xde\xdd\xba\x0c\x1b\xd9\x4f\x80\xa7\x9e\x85\x25\x24\x4c\x85\x94\x2c\x0c\x4e\x60\x03\x75\xc9\x53\xd2\x55\x35\xda\x16\xc4\xac\xfc\xdf\xff\x03\x00\x00\xff\xff\x02\x4a\x2c\xba\x1d\x08\x00\x00")

func tmplJsRequest_loggerJsBytes() ([]byte, error) {
	return bindataRead(
		_tmplJsRequest_loggerJs,
		"tmpl/js/request_logger.js",
	)
}

func tmplJsRequest_loggerJs() (*asset, error) {
	bytes, err := tmplJsRequest_loggerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/js/request_logger.js", size: 2077, mode: os.FileMode(420), modTime: time.Unix(1505404230, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplJsSortingJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\x4d\x6f\xdb\x30\x0c\x3d\xdb\xbf\x82\x40\x03\x58\xda\x1c\xa1\x3d\x67\x1d\x90\x7e\x1c\x06\x0c\xbd\xa4\xdd\x65\xd8\x41\xb1\xe9\x58\xab\x2c\x69\xb2\xec\xb6\x28\xfc\xdf\x07\xc9\x6a\x12\x7b\x29\x86\x5d\x96\x43\x62\xd0\x8f\x8f\x8f\x8f\x64\xaa\x4e\x15\x4e\x68\x05\xad\xb6\xee\x9e\x6f\x25\x12\xe7\xbf\x37\x28\xb1\x70\xda\xe6\x50\xe5\xa0\xe8\x6b\x9a\xf4\xdc\x82\xd5\x4f\x2d\x5c\xc2\x62\x8a\x81\x8f\x90\x81\xdb\xea\xf2\x05\xc0\xd9\x8c\xb2\x1d\x3a\x42\x57\x69\x9a\x78\x3c\xf3\xcc\xe4\xad\x0e\xe1\x39\x6c\x29\xbc\xa6\x69\x12\x18\xd7\x70\x09\x3b\x74\xdf\xb8\x24\x9c\xae\x62\xf0\xea\x10\xdc\x06\x9e\x44\x54\x64\x0d\x9f\xe0\xca\x67\x26\x49\x62\xd1\x75\x56\xc1\xf2\xe2\x43\xe5\x73\x86\x37\xc4\xe7\x39\xe2\x08\x10\x23\xe7\xab\x34\x19\x02\xe9\xbe\xf5\x58\x0a\x65\xe3\xfb\x0c\x0a\xfa\xd0\xa5\x8f\xb0\xa2\x16\xb2\xb4\xa8\x48\xe6\xca\x8c\x32\xfc\x45\x14\x65\x0e\x9f\x1d\xa1\xcc\xe9\x07\x63\xd0\x5e\xf3\x16\x49\x50\x2f\x2a\xb2\x60\xa2\xbd\xeb\x1a\xb4\xa2\x20\x3d\x0d\x8c\x89\xa7\x33\xdc\xb6\xf8\x45\x39\xd2\xe7\x17\xe7\x74\xa6\xaa\xf7\xaa\xd2\x34\x59\x30\xe4\x45\x4d\xbc\x6f\x39\xec\x3d\x13\xaa\xc4\xe7\xdc\xbb\x3f\x76\x37\xf3\x7f\xa2\xd1\x8f\x21\xa3\x8c\x1b\x83\xaa\xf4\x44\x34\x36\x3c\xa4\xa9\xef\xac\xe1\xc6\x08\xb5\xbb\x95\xd8\xa0\x72\x7e\x9a\xdf\xb3\xb3\xce\x8a\x2c\x87\xec\xac\xc4\xb6\x08\x0f\x0d\xba\x5a\x97\xe1\xd1\x70\x57\x87\x07\x8b\x6d\x27\x5d\xf6\x63\x15\x78\x4a\xac\x78\x27\xdd\x46\x5b\x77\xa0\x83\x4b\x18\xc9\x56\xc7\xb5\xee\x27\xcb\xe2\x21\xf1\xc5\x32\xb4\x11\xc1\x6d\x04\x3c\x18\x0f\x61\x3b\xf9\x62\x6a\x51\x68\xb5\x2c\x6a\xec\xad\x56\xcb\xce\xcc\x90\x37\xfa\x49\xbd\x83\x2d\xf5\x93\x9a\xa0\xb1\xbc\x96\xbc\x6d\xef\x78\x83\x3e\xe5\x2d\x98\xad\xd2\x74\xbf\x07\xdc\x39\x5e\xd4\x5f\x45\xeb\x50\xa1\x25\xc2\x61\x93\x43\xf4\x1e\xa3\x5f\xf4\x35\x05\x00\x58\x84\xb7\x94\x55\x42\x95\xe4\xa0\x9c\x32\xad\x48\x56\x48\x51\x3c\x66\x47\xf3\x8b\x49\xfe\xe3\x15\xa9\xb0\x5c\x23\x81\xb1\xd8\xaf\xa5\x24\x94\x49\x54\x3b\x57\xaf\xf6\xc8\xc3\x41\x9e\xb2\x31\x87\xe5\x05\xe4\x8a\x1e\xf0\x0d\xb7\x8f\xeb\x76\x13\x1b\x23\x0b\xe2\x6a\xd1\xd2\x08\x18\xe2\xef\x49\xdd\xde\xc7\xff\xa9\xfc\x5f\x85\x0f\x47\x33\x9a\x81\xf5\xf6\x27\x16\x2e\x5c\x45\x21\x91\xdb\xcd\xf1\xb0\xc3\x49\x8e\x08\xc6\xcb\x18\xfb\x63\x1d\x66\x05\x4e\xd1\x78\xfa\xc5\x64\xcc\x16\x1b\xdd\xe3\xfb\x8c\x47\xf0\xd1\xdd\xbf\x25\x0c\xef\xee\xe1\x58\x7f\x34\x6a\x72\xba\xac\xd2\xf6\xd6\xff\x5b\x4c\xf1\x73\x32\x63\xe4\xcb\xcd\xe4\x58\xf7\x84\x0b\x72\xf2\x8a\x4f\xae\x47\x58\x0d\xef\xe8\xf0\x3b\x00\x00\xff\xff\xdf\x26\xc9\x73\x33\x06\x00\x00")

func tmplJsSortingJsBytes() ([]byte, error) {
	return bindataRead(
		_tmplJsSortingJs,
		"tmpl/js/sorting.js",
	)
}

func tmplJsSortingJs() (*asset, error) {
	bytes, err := tmplJsSortingJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/js/sorting.js", size: 1587, mode: os.FileMode(420), modTime: time.Unix(1506706823, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplJsUtilJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\x51\xaf\x93\x30\x14\xc7\xdf\xf9\x14\x27\xc4\x5c\xca\x26\x63\x9a\xbd\xb8\x8d\x11\xbd\x12\x7d\xd0\x68\x72\xaf\x2f\x52\x96\x74\xd0\x31\xb4\x2b\x4b\x5b\xd4\x79\xd9\x77\x37\x65\x64\x63\x5c\x70\x3e\x78\xfb\x40\xd3\xff\x39\xfd\x9d\x3f\xe7\x14\x00\x60\x5d\xf0\x58\x65\x39\x87\x94\xaa\xdb\x9c\xe5\xe2\xcd\xfe\x4e\x11\x55\x48\x24\xab\xed\x36\x4f\xa8\x0d\x0f\x06\xd4\x2b\x5b\x43\x23\x02\x9e\xe7\xc1\xcb\xf1\x18\xca\x12\x1e\xa9\x2f\x9a\xf7\xf4\x12\x54\x15\x82\x83\x29\x8b\x38\xa6\x52\x9a\xb3\x53\xf4\x00\x94\x49\xda\x05\x9f\x8c\x27\x7d\x98\x84\xf0\x94\x8a\xc7\x94\xee\xec\x9f\x44\xf0\x8c\xa7\xcd\x74\xe3\xf8\x35\x7a\xfa\xf0\x91\xaa\x4d\x9e\xa0\x6d\xb5\xb5\x7b\x70\x54\x2b\x8b\xd6\xbb\xe0\xde\xea\x33\x99\xf1\x75\xde\xfd\xa3\x4d\xc2\xe7\x4f\x77\xfd\x88\xbf\xb6\xeb\x82\xf2\xe5\x3f\x40\xde\x06\x1f\x82\xfb\xa0\x97\xf3\x34\x4d\x97\x7b\xae\xc8\xaf\xf7\x59\xba\x61\x59\xba\x51\xe8\x9b\xcc\x79\xd3\x81\x3e\x83\x57\x6d\x23\x41\x77\x8c\xc4\x14\xb9\x37\x6e\xfa\x1c\xac\x1b\xb2\xdd\xcd\x2c\xfb\x2c\xcf\x8f\x32\x53\x17\xea\xe2\xa8\xa6\x5a\x3d\xbb\xa9\x7d\x5e\x72\x91\x89\x30\x2e\x42\xe2\xfc\x7e\xed\x7c\x1d\x3b\xaf\xa2\x87\xc9\xa1\xc4\x38\x5c\x16\x51\x19\x2e\x31\x36\x23\x7b\x60\x22\x2c\x07\x53\xdb\x2f\xf1\x0a\x29\x51\xd0\x72\x4d\x98\xa4\x25\x2f\x18\xb3\xf1\xaa\x74\x7c\x9c\x0c\x91\x3f\xc5\x23\x9c\x0c\x6c\x1f\xf9\xd3\x90\x06\x51\x38\xc4\x4e\xa4\x23\xb6\x6f\x6b\x3b\xa7\xdf\x47\x5b\xa2\xe2\x4d\xbb\xe5\x3f\x88\x80\x98\x49\xf0\xc0\xe2\xc5\x76\x45\x85\x35\xbb\x88\xeb\xc9\xb9\x4b\xd3\x1d\x29\x2a\x55\x8d\x68\x33\x4e\x79\xd3\x67\x57\xf3\xf4\xaa\xeb\x7d\xa7\xfb\x56\xb1\xde\x51\xb7\x6e\x4a\x25\x32\x9e\x76\x5d\x36\x3a\x50\x95\xb5\x73\xff\xae\x5a\xac\x8b\xac\xf2\x9c\x51\xc2\x5b\x55\x9a\x4c\x3d\x88\x7f\xa5\xe9\xdc\x36\xaa\xeb\x35\x5b\x73\xb9\x23\x1c\x62\x46\xa4\xf4\x4c\x0b\x86\x15\x60\x08\x96\xb9\xd0\x87\xaa\x8e\x3e\xce\x5d\x9d\xb7\x68\x20\x0f\xf5\x93\x3b\x18\x7f\x02\x00\x00\xff\xff\x60\x64\x0c\xd1\x73\x05\x00\x00")

func tmplJsUtilJsBytes() ([]byte, error) {
	return bindataRead(
		_tmplJsUtilJs,
		"tmpl/js/util.js",
	)
}

func tmplJsUtilJs() (*asset, error) {
	bytes, err := tmplJsUtilJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/js/util.js", size: 1395, mode: os.FileMode(420), modTime: time.Unix(1505404230, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x4d\x6f\xdb\x46\x13\xbe\xfb\x57\x0c\xf8\xbe\x87\x16\x30\x4c\xd7\xbd\x04\xbe\xe5\x0b\x85\x51\xbb\x48\xe5\xa4\x40\x11\x04\xc1\x88\x1c\x89\x1b\x2f\x77\x99\xdd\xa1\x5d\x36\xd0\x7f\x2f\x96\xa4\x28\x92\xa2\x24\x52\xa2\x1c\x23\xf0\xc9\xd6\x7e\xcc\xce\xcc\xf3\xcc\xc7\x2e\xbf\x9d\x00\x78\xf6\x01\xe7\x73\x32\xde\x25\x78\x17\x67\xe7\xde\xa9\x1b\x13\x6a\xa6\xbd\x4b\x70\xf3\x00\xde\x3d\x19\x2b\xb4\x72\x2b\x7e\x29\x57\x00\x78\x2c\x58\x92\x1b\xbb\xb9\xd1\xc1\xdd\x72\x34\x24\x1b\x18\x91\x70\xb9\xfe\x26\xd6\xc1\x1d\x08\x0b\x08\x4c\x96\x85\x9a\x03\xaa\x10\x66\x68\x19\x12\xa3\x59\x73\x96\xb8\x41\xd6\x5a\xc2\x4c\x1b\x08\xe9\x9e\xa4\x4e\xc8\xd8\xa5\x44\x29\x02\x52\x96\x2a\x75\x00\x3c\x85\x71\x71\xf2\xd5\xfb\x72\x15\x80\x97\x1a\xe9\xc6\x22\xe6\xc4\x5e\xfa\xfe\x5c\x70\x94\x4e\xcf\x02\x1d\xfb\x5f\x62\x34\x2c\xd4\x8b\x0b\x3f\x76\xea\xf8\x53\xa9\xa7\x7e\x8c\x96\xc9\xf8\xd7\x57\xaf\xdf\xfe\x71\xfb\xf6\x2c\x0e\xbd\x5c\xd0\xe2\x04\x60\x91\xfb\x20\xd2\x96\x9d\x40\xa9\x03\x94\xee\xc7\xe5\x8b\xf3\x17\x17\x85\x7f\x18\xe7\xd6\xbb\x84\x8f\xf9\x96\x35\xb5\x0c\x7d\x4d\xc9\xf2\x4a\xb5\x96\x53\xde\x47\x04\x85\x63\x0c\x05\xda\x84\x16\x50\x4a\x28\x77\x59\x10\xec\xc6\x49\xdc\x93\x05\xa1\x20\xa6\x58\x9b\x0c\x7e\x42\x06\x49\xce\x6f\xa9\x62\x21\xdd\x2a\x61\xc1\x90\x25\xfe\xf9\x0c\xde\x47\xc2\x42\x8c\x77\x94\x6f\x4f\xb4\xb5\x62\x2a\x09\x58\xc3\x3d\x19\x31\xcb\x80\x23\x64\xc0\xe5\x21\x10\x23\x07\x51\x8e\x06\xd8\x84\x02\x31\x13\x01\x24\xc8\x4c\x46\xc1\x03\xda\xa5\x02\xe1\x69\x0e\x17\x4a\xab\x9d\xac\x19\x71\x10\x01\x47\xb4\x52\x36\x24\x46\x21\xed\x59\xe9\xbd\xd3\x6e\x8f\xd8\x80\x14\x1a\xa1\x37\xba\xe4\x25\x2c\x97\x38\xab\xc8\x5a\x52\x2c\x50\xca\xcc\x29\xc8\xc8\x04\x31\x3a\x85\x09\x1e\x22\x6d\xa9\x18\xb3\x10\xa0\x82\x29\x01\x9a\xa9\x60\x83\x46\xb8\xf5\xd6\x8a\xb9\xa2\x70\x87\x46\x31\x26\x8e\x78\x1b\x15\xfa\x5b\xa7\xb9\xf4\x18\x15\xce\x9d\xbd\xb1\x66\x92\x19\x64\x3a\x35\x60\x39\x9d\x42\x29\xc1\xc2\x43\x44\x8a\xee\xc9\xb8\x39\x50\x44\x35\x26\x7d\xca\xd9\x32\x45\x4b\xef\x90\x23\x27\xd7\xc7\x44\x14\x1c\xb2\x41\x44\x31\xad\x68\x94\x33\xd7\xab\x36\x05\x5a\xd9\xb4\x31\x8f\x49\x22\x45\x80\x4e\x43\xff\x8b\xd5\x6a\xb5\x36\x31\x3a\x4c\x83\x9e\x6b\x91\x23\xbb\x8a\x6d\xbf\x44\xd2\x47\x29\xeb\x21\x36\x27\xae\xfd\x74\xea\xa6\x71\x8c\x26\x73\x36\xfc\x46\xdc\x60\x6c\xe5\xc4\x76\x64\x94\x63\xcb\x78\xa8\xc6\x3e\xd5\x36\xb8\x58\xcf\xf5\xbc\x0a\x77\xc9\x5e\x33\xb3\x1c\xef\x32\x76\xfd\xa0\x04\x0d\xc6\xc4\x2e\xb3\x5c\xc2\xc7\xfa\x8c\x21\x9b\x68\x65\xc9\x36\x2c\x06\xf0\x2e\xce\xcf\x5b\x43\x1d\xcc\x35\x06\x33\xd0\xb3\x22\xa4\x6a\xea\x16\x5e\x73\x20\xe3\x9a\x10\x00\xef\xff\x86\x66\x6e\xff\xff\xfc\x90\x66\x42\x09\x27\xcf\xfa\x2e\x95\xde\x38\x41\xd7\xa2\xee\xb0\x25\x9f\xd6\xff\x5f\xfe\xb7\xa8\xb3\x7d\x85\x6a\xae\x14\x85\x43\x91\x2d\xb7\x1d\x15\xe1\x6d\x67\x3c\x23\x3d\x18\xe9\xbc\x12\xf4\xc5\x79\xe2\x16\x83\x65\x6d\x8e\x04\xf2\xce\x03\x9e\x24\xc2\x87\x62\xfa\x32\x70\x7f\x27\xa5\x0a\x23\x80\x9a\xaa\x3d\x03\xb8\xda\x78\xd4\x10\xde\x7e\xca\x93\x84\xf8\x7b\x07\x71\xcd\x0e\x4b\x41\x6a\x04\x67\xb9\x7d\xdb\x79\x50\x34\x71\x75\x12\x24\x45\x77\xda\xcd\x82\xbf\x8a\x9e\xef\x18\xd0\x6f\x11\x3d\x26\xde\xb5\xfd\x2d\x3c\x37\x35\xd9\xe5\xb4\xc8\x51\x9e\xea\x30\x6b\xcf\xb8\x0d\xc2\xe4\xa1\xc4\x26\xa5\x03\x91\x9f\xb4\x7d\x06\x1b\x31\xff\x61\xb8\xdb\xcd\xd1\x65\xe3\x6e\x8b\x12\xf4\x79\x40\x23\x59\x54\x09\x97\x49\xca\x4a\x51\xc9\xda\x45\xd9\xea\x42\xd1\xbf\x18\xed\x3a\xe6\x49\xa6\xab\x27\x53\x91\x96\xf7\xa5\xa1\x8d\xa4\xbb\xe5\x2e\x6f\x4a\xbb\x40\x5d\x9e\x31\xa8\x8b\xdc\x74\xc0\x93\x84\xd3\xc5\x1c\xac\xf0\x01\x29\xd6\x33\xd8\x3e\x71\xfc\xa6\xfa\x7d\x60\x30\x97\x9e\xf4\xbf\x39\xbf\x7e\x76\x77\xc5\xc5\x10\xc8\xe3\xa6\x7d\x63\x03\xbe\x45\xfc\xe3\x16\x9f\xca\x3b\xdd\xe5\xa7\x6b\xa6\x8b\x09\x5d\xeb\x38\x4b\x8a\x27\x13\x36\xf5\xf7\x89\x72\xb6\x55\xc4\x8e\x5b\x6f\x8e\xcf\xd6\x41\x4c\xad\x9e\x6a\x92\x74\x33\x0b\x3f\x24\x61\xfe\x5a\x74\x3c\x22\xee\x3e\xe1\x99\x8b\xa7\xbb\xd5\x7e\xd5\xd1\xa2\xed\xdb\xbc\x8d\x5c\x34\x87\x73\x74\xbc\x16\x2f\xaf\xd7\x60\xc8\xa6\xf2\xe0\x58\x3b\xa0\xf8\xd7\x9e\x45\x25\x31\x6d\x0c\xb7\x37\xf9\xf4\x31\xc3\x6d\xf7\x09\xcf\xe1\xf6\xe3\xf2\xf0\x04\x1a\xdf\x64\x6a\x52\x57\x4f\xd8\x1d\x0d\x50\xad\x65\x59\x7d\xa6\x72\x6e\xbf\xae\x97\xb0\xca\xe1\xe8\x2e\x56\xab\x61\xc1\x14\x37\xbd\x36\x28\x51\x34\x5b\xaa\xe6\x35\xab\x53\x31\x37\xfb\x9d\x34\xab\xad\xd9\xe8\xb3\x8e\xa8\xab\xf4\xd3\xd3\x2f\x14\xd4\xf4\x4e\x8c\x0b\x5f\x16\x2d\xd6\x79\x1f\x26\x57\x6d\x1a\x6e\x4b\xda\xed\x50\x58\x11\xa3\x46\xf0\xa6\x80\x71\x65\x2f\x5f\x17\x5a\x72\x7b\xbe\x05\x2c\x3a\xc2\xb0\xaf\xa8\x76\x90\xd4\x65\x05\x5a\xb1\xd1\xb2\x9f\xa8\xd7\xe5\xe2\x2d\xc9\xbd\x96\x52\x3e\x36\xb1\xda\xe0\xe6\x0e\x0f\x75\x99\xda\xa1\x72\x39\xf2\xa9\xc1\xc0\xc9\x9a\x97\x57\xd4\x9b\xb4\x3f\xa2\x0e\xa5\x5c\xd4\x7e\x21\x1b\x83\x17\x31\x71\xa4\xc3\xd1\xc5\x26\xc5\xd7\xc1\x71\x85\x7e\x4d\xc9\x64\xb7\xf9\x82\x77\xf5\x22\xd7\x83\x3b\x7f\x76\x6e\xed\x3c\x25\x22\x0c\x7b\xcb\xfd\x9d\xb2\xfc\x11\x6b\x13\xbd\xf5\x5d\x1b\xc6\x2d\xf4\x76\x8b\xbb\x05\xe5\x1d\xe4\x28\xee\xec\x19\x32\x25\x2d\xda\x88\x76\x92\xbe\xdb\xb7\xb5\x10\xe8\xe3\xba\x55\x04\xad\x65\x97\xc1\x81\x62\x19\x39\xb5\xaf\x75\xb8\x96\xa3\x7a\xf9\x4c\x28\xa6\x39\x99\xe6\xe4\x4c\x9b\x18\xb9\x9c\xfe\xf5\xe2\x99\x3a\x1b\xa9\x53\xf3\x7e\x27\x5d\x2a\xbb\x0f\x40\xf8\x8e\xf6\xb3\xa9\xd9\x7d\x40\x77\x07\xb2\xd5\x0b\xbb\x9f\x9c\x4a\x30\x7a\x58\xb7\x49\xe5\x21\x66\xf7\xc9\x9b\xf7\x28\xd3\xb5\x50\xd8\x09\x73\xcb\xa8\x76\xa1\x1e\x8c\x59\x62\x84\x2e\xbf\x0e\x3d\x66\x4c\x86\x24\xf1\xb1\xcf\x0c\x0c\xfe\xbb\xdf\x99\x53\xad\x25\xa1\xea\x16\x5b\x7d\x23\xe8\x95\x14\x6e\xd7\xbe\x28\x2c\x9a\x77\xcc\x7f\xb2\x57\x68\xe9\xc3\xe4\x7a\xdc\xf4\xd0\xe0\xcd\xed\xba\xca\x83\x89\x53\x5e\x54\xc7\xef\x87\x5d\xee\xba\x65\xe4\xfd\xa4\x8f\x9c\x4b\x6a\xba\x29\x7a\xd8\x5f\xad\x7e\xb8\xb4\x6e\xb0\x07\xa0\x53\xde\xa8\x8f\xa0\xaa\xbb\x24\x9f\x2c\xfe\x0b\x00\x00\xff\xff\x35\x82\x09\x63\xd3\x29\x00\x00")

func tmplSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_tmplSwaggerJson,
		"tmpl/swagger.json",
	)
}

func tmplSwaggerJson() (*asset, error) {
	bytes, err := tmplSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/swagger.json", size: 10707, mode: os.FileMode(420), modTime: time.Unix(1505404230, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"tmpl/css/style.css": tmplCssStyleCss,
	"tmpl/index.html": tmplIndexHtml,
	"tmpl/js/mapping.js": tmplJsMappingJs,
	"tmpl/js/request_logger.js": tmplJsRequest_loggerJs,
	"tmpl/js/sorting.js": tmplJsSortingJs,
	"tmpl/js/util.js": tmplJsUtilJs,
	"tmpl/swagger.json": tmplSwaggerJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"tmpl": &bintree{nil, map[string]*bintree{
		"css": &bintree{nil, map[string]*bintree{
			"style.css": &bintree{tmplCssStyleCss, map[string]*bintree{}},
		}},
		"index.html": &bintree{tmplIndexHtml, map[string]*bintree{}},
		"js": &bintree{nil, map[string]*bintree{
			"mapping.js": &bintree{tmplJsMappingJs, map[string]*bintree{}},
			"request_logger.js": &bintree{tmplJsRequest_loggerJs, map[string]*bintree{}},
			"sorting.js": &bintree{tmplJsSortingJs, map[string]*bintree{}},
			"util.js": &bintree{tmplJsUtilJs, map[string]*bintree{}},
		}},
		"swagger.json": &bintree{tmplSwaggerJson, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

